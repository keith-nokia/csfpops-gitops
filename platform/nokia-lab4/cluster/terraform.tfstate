{
  "version": 4,
  "terraform_version": "0.14.11",
  "serial": 58,
  "lineage": "19107884-0afb-af79-0aaa-cc5d878519f8",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "arn": "arn:aws:ec2:ap-southeast-2::image/ami-06eb8d7d0eb5ee68e",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0a08fadf037116795",
                  "throughput": "0",
                  "volume_size": "20",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "creation_date": "2022-11-12T12:40:45.000Z",
            "description": "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.23.13, docker: 20.10.17-1.amzn2.0.1, containerd: 1.6.6-1.amzn2.0.2)",
            "ena_support": true,
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "amazon-eks-node-1.23-v*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-06eb8d7d0eb5ee68e",
            "image_id": "ami-06eb8d7d0eb5ee68e",
            "image_location": "amazon/amazon-eks-node-1.23-v20221112",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "amazon-eks-node-1.23-v20221112",
            "name_regex": null,
            "owner_id": "602401143452",
            "owners": [
              "602401143452"
            ],
            "platform": null,
            "platform_details": "Linux/UNIX",
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0a08fadf037116795",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "usage_operation": "RunInstances",
            "virtualization_type": "hvm"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "azs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "ap-southeast-2"
            ],
            "id": "ap-southeast-2",
            "names": [
              "ap-southeast-2a",
              "ap-southeast-2b",
              "ap-southeast-2c"
            ],
            "state": null,
            "zone_ids": [
              "apse2-az1",
              "apse2-az3",
              "apse2-az2"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "126494010021",
            "arn": "arn:aws:iam::126494010021:user/nokia_installer",
            "id": "126494010021",
            "user_id": "AIDAR245BNKSXQLGVE4AX"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_role",
      "name": "eks",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::126494010021:role/service_eks_cluster",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-02-17T09:04:42Z",
            "description": "Allows access to other AWS service resources that are required to operate clusters managed by EKS.",
            "id": "service_eks_cluster",
            "max_session_duration": 3600,
            "name": "service_eks_cluster",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Name": "service_eks_cluster"
            },
            "unique_id": "AROAR245BNKS5W76WXNZT"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_role",
      "name": "nodes",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::126494010021:role/service_ec2_eksnode",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2022-02-17T09:34:50Z",
            "description": "Allows EC2 instances to call AWS services on your behalf.",
            "id": "service_ec2_eksnode",
            "max_session_duration": 3600,
            "name": "service_ec2_eksnode",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Name": "service_ec2_eksnode"
            },
            "unique_id": "AROAR245BNKS42ZXRZBFF"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_kms_key",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "aws_account_id": "126494010021",
            "creation_date": "2022-12-13T05:37:34Z",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_date": null,
            "description": "nokia-lab4 EKS Secret Encryption Key",
            "enabled": true,
            "expiration_model": "",
            "grant_tokens": null,
            "id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "key_id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "key_manager": "CUSTOMER",
            "key_state": "Enabled",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "multi_region_configuration": [],
            "origin": "AWS_KMS",
            "valid_to": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_kms_key",
      "name": "s3_artifacts",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "aws_account_id": "126494010021",
            "creation_date": "2022-12-13T05:37:34Z",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_date": null,
            "description": "nokia-lab4 EKS Secret Encryption Key",
            "enabled": true,
            "expiration_model": "",
            "grant_tokens": null,
            "id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "key_id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "key_manager": "CUSTOMER",
            "key_state": "Enabled",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "multi_region_configuration": [],
            "origin": "AWS_KMS",
            "valid_to": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnet_ids",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": null,
            "id": "vpc-02827d6d88aa6323e",
            "ids": [
              "subnet-058d18852b903ca2b",
              "subnet-087f49635a3f662c7",
              "subnet-08fbb1f98b5b27244"
            ],
            "tags": {
              "Network": "private"
            },
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnet_ids",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": null,
            "id": "vpc-02827d6d88aa6323e",
            "ids": [
              "subnet-09aa4790765cedef7",
              "subnet-09db2fb0739f04d56",
              "subnet-0c675e86319101909"
            ],
            "tags": {
              "Network": "public"
            },
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_subnet_ids",
      "name": "vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filter": null,
            "id": "vpc-02827d6d88aa6323e",
            "ids": [
              "subnet-058d18852b903ca2b",
              "subnet-087f49635a3f662c7",
              "subnet-08fbb1f98b5b27244",
              "subnet-09aa4790765cedef7",
              "subnet-09db2fb0739f04d56",
              "subnet-0c675e86319101909"
            ],
            "tags": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "aws_ssm_seelog",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "fd2522128e3cd8b87787fe76c2e20187404da0f8b3a02ad2b259d57f60d61bcb",
            "rendered": "\u003c!--amazon-ssm-agent uses seelog logging --\u003e\n\u003c!--Seelog has github wiki pages, which contain detailed how-tos references: https://github.com/cihub/seelog/wiki --\u003e\n\u003c!--Seelog examples can be found here: https://github.com/cihub/seelog-examples --\u003e\n\u003cseelog type=\"adaptive\" mininterval=\"2000000\" maxinterval=\"100000000\" critmsgcount=\"500\" minlevel=\"info\"\u003e\n    \u003cexceptions\u003e\n        \u003cexception filepattern=\"test*\" minlevel=\"error\"/\u003e\n    \u003c/exceptions\u003e\n    \u003coutputs formatid=\"fmtinfo\"\u003e\n        \u003cconsole formatid=\"fmtinfo\"/\u003e\n        \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/amazon-ssm-agent.log\" maxsize=\"30000000\" maxrolls=\"5\"/\u003e\n        \u003cfilter levels=\"error,critical\" formatid=\"fmterror\"\u003e\n            \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/errors.log\" maxsize=\"10000000\" maxrolls=\"5\"/\u003e\n        \u003c/filter\u003e\n        \u003ccustom name=\"cloudwatch_receiver\" formatid=\"fmtdebug\" data-log-group=\"/aws/eks/nokia-lab4/cluster\"/\u003e\n    \u003c/outputs\u003e\n    \u003cformats\u003e\n        \u003cformat id=\"fmterror\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtdebug\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtinfo\" format=\"%Date %Time %LEVEL %Msg%n\"/\u003e\n    \u003c/formats\u003e\n\u003c/seelog\u003e",
            "template": "\u003c!--amazon-ssm-agent uses seelog logging --\u003e\n\u003c!--Seelog has github wiki pages, which contain detailed how-tos references: https://github.com/cihub/seelog/wiki --\u003e\n\u003c!--Seelog examples can be found here: https://github.com/cihub/seelog-examples --\u003e\n\u003cseelog type=\"adaptive\" mininterval=\"2000000\" maxinterval=\"100000000\" critmsgcount=\"500\" minlevel=\"info\"\u003e\n    \u003cexceptions\u003e\n        \u003cexception filepattern=\"test*\" minlevel=\"error\"/\u003e\n    \u003c/exceptions\u003e\n    \u003coutputs formatid=\"fmtinfo\"\u003e\n        \u003cconsole formatid=\"fmtinfo\"/\u003e\n        \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/amazon-ssm-agent.log\" maxsize=\"30000000\" maxrolls=\"5\"/\u003e\n        \u003cfilter levels=\"error,critical\" formatid=\"fmterror\"\u003e\n            \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/errors.log\" maxsize=\"10000000\" maxrolls=\"5\"/\u003e\n        \u003c/filter\u003e\n        \u003ccustom name=\"cloudwatch_receiver\" formatid=\"fmtdebug\" data-log-group=\"/aws/eks/${cluster_name}/cluster\"/\u003e\n    \u003c/outputs\u003e\n    \u003cformats\u003e\n        \u003cformat id=\"fmterror\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtdebug\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtinfo\" format=\"%Date %Time %LEVEL %Msg%n\"/\u003e\n    \u003c/formats\u003e\n\u003c/seelog\u003e",
            "vars": {
              "cluster_name": "nokia-lab4"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "edges_userdata",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "229a94d4fb92e7724b0aa9f3834e26d9f2a623e68200e4e72b31d005217d33df",
            "rendered": "MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"//\"\n\n--//\nContent-Type: text/cloud-config; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"cloud-config.txt\"\n\n#cloud-config\ncloud_final_modules:\n- [scripts-user, always]\n\n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n#!/bin/bash -xe\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n[[ -f /etc/.firstboot_done ]] || {\n\n## Install requirements\nrpm -qa | grep parted || yum install -y parted\nrpm -qa | grep rsync || yum install -y rsync\n\n## Install Amazon SSM Agent\nrpm -qa | grep amazon-ssm-agent || yum install -y https://s3.ap-southeast-2.amazonaws.com/amazon-ssm-ap-southeast-2/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl enable amazon-ssm-agent\ncat \u003c\u003c EOF \u003e\u003e /etc/amazon/ssm/seelog.xml\n\u003c!--amazon-ssm-agent uses seelog logging --\u003e\n\u003c!--Seelog has github wiki pages, which contain detailed how-tos references: https://github.com/cihub/seelog/wiki --\u003e\n\u003c!--Seelog examples can be found here: https://github.com/cihub/seelog-examples --\u003e\n\u003cseelog type=\"adaptive\" mininterval=\"2000000\" maxinterval=\"100000000\" critmsgcount=\"500\" minlevel=\"info\"\u003e\n    \u003cexceptions\u003e\n        \u003cexception filepattern=\"test*\" minlevel=\"error\"/\u003e\n    \u003c/exceptions\u003e\n    \u003coutputs formatid=\"fmtinfo\"\u003e\n        \u003cconsole formatid=\"fmtinfo\"/\u003e\n        \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/amazon-ssm-agent.log\" maxsize=\"30000000\" maxrolls=\"5\"/\u003e\n        \u003cfilter levels=\"error,critical\" formatid=\"fmterror\"\u003e\n            \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/errors.log\" maxsize=\"10000000\" maxrolls=\"5\"/\u003e\n        \u003c/filter\u003e\n        \u003ccustom name=\"cloudwatch_receiver\" formatid=\"fmtdebug\" data-log-group=\"/aws/eks/nokia-lab4/cluster\"/\u003e\n    \u003c/outputs\u003e\n    \u003cformats\u003e\n        \u003cformat id=\"fmterror\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtdebug\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtinfo\" format=\"%Date %Time %LEVEL %Msg%n\"/\u003e\n    \u003c/formats\u003e\n\u003c/seelog\u003e\nEOF\nsystemctl restart amazon-ssm-agent\n\n## Partitioning\nparted --script /dev/nvme1n1 \\\nmklabel gpt \\\nmkpart log ext4 0% 100%\npartprobe\n\n## Format new partition\nmkfs.ext4 /dev/nvme1n1p1\n\n## Automatic mount\ncat \u003c\u003c EOF \u003e\u003e /etc/fstab\ntmpfs   /tmp            tmpfs     defaults,size=1g,mode=1777,nodev,noexec,nosuid  0       0\n/tmp    /var/tmp        none      rw,nodev,noexec,nosuid,bind     0       0\ntmpfs   /dev/shm        tmpfs     noexec,nosuid,nodev    0       0\nEOF\n\n# /var/log\necho \"$(blkid | grep nvme1n1p1 | awk '{print $2}') /var/log ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\nmkdir -p /tmp/log\nmount /dev/nvme1n1p1 /tmp/log\nrsync -av /var/log/ /tmp/log\numount /tmp/log\nmount /dev/nvme1n1p1 /var/log\nchmod -R 777 /var/log\n\n# Reload fstab\nmount -a\n\nkubelet_service=\"/etc/systemd/system/kubelet.service\"\n\n\n# Docker options set sysconfig environment file\ncat \u003c\u003c EOF \u003e\u003e /etc/sysconfig/docker\n\nOPTIONS='--selinux-enabled=true --exec-opt=native.cgroupdriver=systemd --storage-opt overlay2.override_kernel_check=true --userland-proxy=false'\nEOF\nsystemctl restart docker\n\n\n# Allow user supplied pre userdata code\n\n\n# Systemd does not support appending environment variables. Add a new variable\nsed -i 's/KUBELET_EXTRA_ARGS/KUBELET_EXTRA_ARGS $EXTENDED_KUBELET_ARGS/' $kubelet_service\ncat \u003c\u003c EOF \u003e /etc/systemd/system/kubelet.service.d/9999-extended-kubelet-args.conf\n[Service]\nEnvironment='EXTENDED_KUBELET_ARGS=--cgroup-driver=systemd'\nEOF\nsystemctl daemon-reload\n\n# Allow user supplied userdata code\n\n\n\n# Point resolv.conf to NodeLocal DNS\necho \"supersede domain-name-servers 127.0.0.1,169.254.169.253;\" \u003e\u003e /etc/dhcp/dhclient.conf \u0026\u0026 dhclient -r \u0026\u0026 dhclient\n# We always use image-id in launch-template which means it is considered as custom AMI\nB64_CLUSTER_CA=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1USXhNekExTkRRMU4xb1hEVE15TVRJeE1EQTFORFExTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUFFuClBBTTV0VjRDZ3JNZld4Y3htUmFselR4Q3REMFFyZzN2MW1mTDByV3hiMDhFb2xJK01lRUNic1lyRHc4MXExRVEKMmFJU0tFTlpGNTBjZ3Z6dm5ybGRxZTJUb3BXeU9yNDAvT0hHTFpPakRwZVEzS3ZSYWQ1WDNocms3YXExaVUxbwpzaVNJN2xSbGdWU05zb0pFbkFVMHRpM1BleXdiTVJzSWc0R1JLcHVJZVdMOFVBQ0tGdW1WdFdOWVZSS1RveEowClFwRVpPUFdpU1hzdDEweVoxaHVVbEM4Tm5kSTFZTUwxd1NwbEM2ZFRzQlQ3akxuRHh6c0djT0ZRWk9qUkFPZ2MKSVdxSVNwMjU4ODJMZDhxeVVnMHo1aUJtUmpjK1Q2SlBwSWp6UnA3NGdNbWRxSWV1VjNuT1ZBaHRIYStMV2F0aQpaNkg0Vktaa2swVjVjQ0JMZ1FNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJdi9NWnIwZDhYeENLWEdQY1djOC93aE1kMkhNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRC8zdmxWSXNzVjc3K3FnSHNvQQp6RHZFcG93bzdvNDV0WHpWYzZKVi9XUmdsVVZ6eFR2bmNVV3l3WnZPekNBZDRnZStyMy83cUFacWVxUzgySlRGCmRLb1hSd2J0TldpZno3dGR5cmNvY0JsMWlvZC83R1BHemwxaUpNUC85WTJNWjZGYWlrczJIZ1dMKzZLaThRM0oKRWJNRWhReWtOQmpMb1FwUVpMSDdWZEF4bCs5c0txTmFHazRPWUUxQml1b3JRSm53RnJ2WmFBMndidk1KNVFMYgpqWEp2NXR1VTBHZnNjeE9jdEEwL1VXcU5JVUdLdWpMTFNqWk5nYXg1RW4vTDgxM29PU0wrUitEV1cyOFhhV0FFCkhrQzFYVUdPbUczQWJjbnBaVCt6MGhsZzVtOXRVZmNET0czejk5OVNreDFMUHV4RmdqTjNCbVVqK2pIWk9nUUwKMElzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\nAPI_SERVER_URL=https://09EC52C85710A0FD369918C20889719A.gr7.ap-southeast-2.eks.amazonaws.com\n/etc/eks/bootstrap.sh nokia-lab4 --b64-cluster-ca $B64_CLUSTER_CA --apiserver-endpoint $API_SERVER_URL --container-runtime dockerd\n\ntouch /etc/.firstboot_done\n}\n\n\n\n",
            "template": "MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"//\"\n\n--//\nContent-Type: text/cloud-config; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"cloud-config.txt\"\n\n#cloud-config\ncloud_final_modules:\n- [scripts-user, always]\n\n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n#!/bin/bash -xe\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n[[ -f /etc/.firstboot_done ]] || {\n\n## Install requirements\nrpm -qa | grep parted || yum install -y parted\nrpm -qa | grep rsync || yum install -y rsync\n\n## Install Amazon SSM Agent\nrpm -qa | grep amazon-ssm-agent || yum install -y https://s3.${region}.amazonaws.com/amazon-ssm-${region}/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl enable amazon-ssm-agent\ncat \u003c\u003c EOF \u003e\u003e /etc/amazon/ssm/seelog.xml\n${seelog_file}\nEOF\nsystemctl restart amazon-ssm-agent\n\n## Partitioning\nparted --script /dev/nvme1n1 \\\nmklabel gpt \\\nmkpart log ext4 0% 100%\npartprobe\n\n## Format new partition\nmkfs.ext4 /dev/nvme1n1p1\n\n## Automatic mount\ncat \u003c\u003c EOF \u003e\u003e /etc/fstab\ntmpfs   /tmp            tmpfs     defaults,size=1g,mode=1777,nodev,noexec,nosuid  0       0\n/tmp    /var/tmp        none      rw,nodev,noexec,nosuid,bind     0       0\ntmpfs   /dev/shm        tmpfs     noexec,nosuid,nodev    0       0\nEOF\n\n# /var/log\necho \"$(blkid | grep nvme1n1p1 | awk '{print $2}') /var/log ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\nmkdir -p /tmp/log\nmount /dev/nvme1n1p1 /tmp/log\nrsync -av /var/log/ /tmp/log\numount /tmp/log\nmount /dev/nvme1n1p1 /var/log\nchmod -R 777 /var/log\n\n# Reload fstab\nmount -a\n\nkubelet_service=\"/etc/systemd/system/kubelet.service\"\n\n%{ if container_runtime == \"containerd\" }\nkubelet_service=\"/etc/eks/containerd/kubelet-containerd.service\"\nconf=/etc/eks/containerd/containerd-config.toml\n# EKS bootstrap script moves $conf to /etc/eks/containerd/config.toml\nsection=\"\\[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd.runtimes.runc.options\\]\"\nkey=\"SystemdCgroup\"\ngrep -q $section $conf || sed -i \"/^runtime_type.*/a $section\" $conf\ngrep -q $key $conf || sed -i \"/$section.*/a $key = true\" $conf\n%{ else }\n# Docker options set sysconfig environment file\ncat \u003c\u003c EOF \u003e\u003e /etc/sysconfig/docker\n\nOPTIONS='${docker_opts}'\nEOF\nsystemctl restart docker\n%{ endif }\n\n# Allow user supplied pre userdata code\n${pre_userdata}\n\n# Systemd does not support appending environment variables. Add a new variable\nsed -i 's/KUBELET_EXTRA_ARGS/KUBELET_EXTRA_ARGS $EXTENDED_KUBELET_ARGS/' $kubelet_service\ncat \u003c\u003c EOF \u003e /etc/systemd/system/kubelet.service.d/9999-extended-kubelet-args.conf\n[Service]\nEnvironment='EXTENDED_KUBELET_ARGS=${kubelet_extra_args}'\nEOF\nsystemctl daemon-reload\n\n# Allow user supplied userdata code\n${additional_userdata}\n\n# Point resolv.conf to NodeLocal DNS\necho \"supersede domain-name-servers 127.0.0.1,169.254.169.253;\" \u003e\u003e /etc/dhcp/dhclient.conf \u0026\u0026 dhclient -r \u0026\u0026 dhclient\n# We always use image-id in launch-template which means it is considered as custom AMI\nB64_CLUSTER_CA=${cluster_ca}\nAPI_SERVER_URL=${cluster_ep}\n/etc/eks/bootstrap.sh ${cluster_name} --b64-cluster-ca $B64_CLUSTER_CA --apiserver-endpoint $API_SERVER_URL --container-runtime ${container_runtime}\n\ntouch /etc/.firstboot_done\n}\n\n%{ if container_runtime == \"containerd\" }\nln -sf /run/containerd/containerd.sock /run/dockershim.sock\nsystemctl daemon-reload\nsystemctl start kubelet\n%{ endif }\n\n",
            "vars": {
              "additional_userdata": "\n",
              "bootstrap_extra_args": "",
              "cluster_ca": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1USXhNekExTkRRMU4xb1hEVE15TVRJeE1EQTFORFExTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUFFuClBBTTV0VjRDZ3JNZld4Y3htUmFselR4Q3REMFFyZzN2MW1mTDByV3hiMDhFb2xJK01lRUNic1lyRHc4MXExRVEKMmFJU0tFTlpGNTBjZ3Z6dm5ybGRxZTJUb3BXeU9yNDAvT0hHTFpPakRwZVEzS3ZSYWQ1WDNocms3YXExaVUxbwpzaVNJN2xSbGdWU05zb0pFbkFVMHRpM1BleXdiTVJzSWc0R1JLcHVJZVdMOFVBQ0tGdW1WdFdOWVZSS1RveEowClFwRVpPUFdpU1hzdDEweVoxaHVVbEM4Tm5kSTFZTUwxd1NwbEM2ZFRzQlQ3akxuRHh6c0djT0ZRWk9qUkFPZ2MKSVdxSVNwMjU4ODJMZDhxeVVnMHo1aUJtUmpjK1Q2SlBwSWp6UnA3NGdNbWRxSWV1VjNuT1ZBaHRIYStMV2F0aQpaNkg0Vktaa2swVjVjQ0JMZ1FNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJdi9NWnIwZDhYeENLWEdQY1djOC93aE1kMkhNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRC8zdmxWSXNzVjc3K3FnSHNvQQp6RHZFcG93bzdvNDV0WHpWYzZKVi9XUmdsVVZ6eFR2bmNVV3l3WnZPekNBZDRnZStyMy83cUFacWVxUzgySlRGCmRLb1hSd2J0TldpZno3dGR5cmNvY0JsMWlvZC83R1BHemwxaUpNUC85WTJNWjZGYWlrczJIZ1dMKzZLaThRM0oKRWJNRWhReWtOQmpMb1FwUVpMSDdWZEF4bCs5c0txTmFHazRPWUUxQml1b3JRSm53RnJ2WmFBMndidk1KNVFMYgpqWEp2NXR1VTBHZnNjeE9jdEEwL1VXcU5JVUdLdWpMTFNqWk5nYXg1RW4vTDgxM29PU0wrUitEV1cyOFhhV0FFCkhrQzFYVUdPbUczQWJjbnBaVCt6MGhsZzVtOXRVZmNET0czejk5OVNreDFMUHV4RmdqTjNCbVVqK2pIWk9nUUwKMElzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "cluster_ep": "https://09EC52C85710A0FD369918C20889719A.gr7.ap-southeast-2.eks.amazonaws.com",
              "cluster_name": "nokia-lab4",
              "container_runtime": "dockerd",
              "docker_opts": "--selinux-enabled=true --exec-opt=native.cgroupdriver=systemd --storage-opt overlay2.override_kernel_check=true --userland-proxy=false",
              "kubelet_extra_args": "--cgroup-driver=systemd",
              "pre_userdata": "",
              "region": "ap-southeast-2",
              "seelog_file": "\u003c!--amazon-ssm-agent uses seelog logging --\u003e\n\u003c!--Seelog has github wiki pages, which contain detailed how-tos references: https://github.com/cihub/seelog/wiki --\u003e\n\u003c!--Seelog examples can be found here: https://github.com/cihub/seelog-examples --\u003e\n\u003cseelog type=\"adaptive\" mininterval=\"2000000\" maxinterval=\"100000000\" critmsgcount=\"500\" minlevel=\"info\"\u003e\n    \u003cexceptions\u003e\n        \u003cexception filepattern=\"test*\" minlevel=\"error\"/\u003e\n    \u003c/exceptions\u003e\n    \u003coutputs formatid=\"fmtinfo\"\u003e\n        \u003cconsole formatid=\"fmtinfo\"/\u003e\n        \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/amazon-ssm-agent.log\" maxsize=\"30000000\" maxrolls=\"5\"/\u003e\n        \u003cfilter levels=\"error,critical\" formatid=\"fmterror\"\u003e\n            \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/errors.log\" maxsize=\"10000000\" maxrolls=\"5\"/\u003e\n        \u003c/filter\u003e\n        \u003ccustom name=\"cloudwatch_receiver\" formatid=\"fmtdebug\" data-log-group=\"/aws/eks/nokia-lab4/cluster\"/\u003e\n    \u003c/outputs\u003e\n    \u003cformats\u003e\n        \u003cformat id=\"fmterror\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtdebug\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtinfo\" format=\"%Date %Time %LEVEL %Msg%n\"/\u003e\n    \u003c/formats\u003e\n\u003c/seelog\u003e",
              "selinux": "permissive",
              "selinux_booleans": "setsebool -P named_write_master_zones on\nsetsebool -P virt_use_nfs on\nsetsebool -P  container_connect_any on\n",
              "selinux_policies": "cat \u003c\u003c EOF \u003e /tmp/kubemod.te\n\nmodule kubemod 1.0;\nrequire {\n\ttype admin_home_t;\n\ttype auditd_t;\n\ttype afs3_callback_port_t;\n\ttype bin_t;\n\ttype cert_t;\n\ttype cephfs_t;\n\ttype commplex_link_port_t;\n\ttype commplex_main_port_t;\n\ttype chronyd_t;\n\ttype container_t;\n\ttype container_file_t;\n\ttype container_var_lib_t;\n\ttype cgroup_t;\n\ttype chkpwd_t;\n\ttype dhcpc_t;\n\ttype dns_port_t;\n\ttype ec2_instance_connect_t;\n\ttype etc_t;\n\ttype fusefs_t;\n\ttype geneve_port_t;\n\ttype gatekeeper_port_t;\n\ttype hostname_t;\n\ttype http_port_t;\n\ttype http_cache_port_t;\n\ttype ifconfig_t;\n\ttype irqbalance_t;\n\ttype jboss_management_port_t;\n\ttype kerberos_port_t;\n\ttype kernel_t;\n\ttype kubernetes_port_t;\n\ttype logrotate_t;\n\ttype mysqld_port_t;\n\ttype node_t;\n\ttype nfs_t;\n\ttype ntop_port_t;\n\ttype postgresql_port_t;\n\ttype postfix_pickup_t;\n\ttype postfix_master_t;\n\ttype postfix_qmgr_t;\n\ttype pki_ca_port_t;\n\ttype proc_t;\n\ttype rngd_t;\n\ttype redis_port_t;\n\ttype websm_port_t;\n\ttype setfiles_t;\n\ttype sshd_t;\n\ttype sysfs_t;\n\ttype syslogd_t;\n\ttype syslogd_var_run_t;\n\ttype soundd_port_t;\n\ttype unconfined_service_t;\n\ttype unlabeled_t;\n\ttype unreserved_port_t;\n\ttype usr_t;\n\ttype epmd_port_t;\n\ttype hplip_port_t;\n\ttype rabbitmq_port_t;\n\ttype ephemeral_port_t;\n\ttype cyphesis_port_t;\n\ttype amqp_port_t;\n\ttype transproxy_port_t;\n\ttype tram_port_t;\n\tclass capability { audit_write chown fowner dac_override net_bind_service setuid setgid };\n\tclass netlink_route_socket { setopt getopt bind create getattr nlmsg_read read  write};\n\tclass netlink_audit_socket { setopt getopt bind create getattr nlmsg_relay nlmsg_read read  write };\n\tclass dir { open add_name remove_name rmdir create write read setattr search };\n\tclass file { append execute create getattr ioctl lock open rename read setattr unlink write execute_no_trans search };\n\tclass lnk_file { create read write unlink setattr getattr };\n\tclass filesystem associate;\n\tclass fifo_file open;\n\tclass process { setsched transition execmem noatsecure rlimitinh siginh };\n\tclass process2 nnp_transition;\n\tclass system module_request;\n\tclass tcp_socket { accept read write bind connect create getattr listen name_bind name_connect node_bind getopt setopt shutdown };\n\tclass udp_socket { bind read write connect create getattr name_bind name_connect node_bind getopt setopt ioctl };\n}\n#============= auditd_t ==============\nallow auditd_t unlabeled_t:dir { add_name read remove_name write setattr };\nallow auditd_t unlabeled_t:file { append ioctl read create getattr open rename setattr unlink };\n#============= dhcpc_t ==============\nallow dhcpc_t hostname_t:process { noatsecure rlimitinh siginh };\nallow dhcpc_t chronyd_t:process { noatsecure rlimitinh siginh };\nallow dhcpc_t ifconfig_t:process { noatsecure rlimitinh siginh };\nallow dhcpc_t setfiles_t:process { noatsecure rlimitinh siginh };\n#============= ec2_instance_connect_t ==============\nallow ec2_instance_connect_t kernel_t:system module_request;\n#============= container_t ==============\nallow container_t admin_home_t:file open;\nallow container_t bin_t:file { create setattr write rename unlink };\nallow container_t bin_t:dir { add_name remove_name write };\nallow container_t etc_t:dir { add_name remove_name setattr write };\nallow container_t etc_t:file { create rename setattr unlink write };\nallow container_t self:capability { audit_write chown fowner setuid setgid dac_override net_bind_service };\nallow container_t self:netlink_route_socket { setopt bind create  read write getattr nlmsg_read};\nallow container_t self:netlink_audit_socket { write create nlmsg_relay };\nallow container_t self:tcp_socket { accept read write bind connect create getopt getattr listen setopt shutdown };\nallow container_t self:udp_socket { ioctl read write bind connect create getattr getopt setopt };\nallow container_t self:process execmem;\nallow container_t self:dir { add_name write };\nallow container_t self:file { read create };\nallow container_t postgresql_port_t:tcp_socket { name_bind name_connect };\nallow container_t mysqld_port_t:tcp_socket { name_bind name_connect };\nallow container_t websm_port_t:tcp_socket { name_bind name_connect };\nallow container_t dns_port_t:tcp_socket { name_bind name_connect };\nallow container_t dns_port_t:udp_socket name_bind;\nallow container_t fusefs_t:dir setattr;\nallow container_t fusefs_t:file { execute execute_no_trans };\nallow container_t fusefs_t:lnk_file { create read getattr };\nallow container_t cephfs_t:dir { add_name create read remove_name rmdir setattr write };\nallow container_t cephfs_t:file { create execute execute_no_trans rename setattr unlink };\nallow container_t cephfs_t:lnk_file { getattr setattr read write create unlink };\nallow container_t http_cache_port_t:tcp_socket { name_bind name_connect };\nallow container_t http_port_t:tcp_socket { name_bind name_connect };\nallow container_t node_t:tcp_socket node_bind;\nallow container_t node_t:udp_socket node_bind;\nallow container_t nfs_t:dir write;\nallow container_t soundd_port_t:tcp_socket name_bind;\nallow container_t sysfs_t:file { open read getattr };\nallow container_t sysfs_t:dir { open read };\nallow container_t sysfs_t:lnk_file { read getattr };\nallow container_t cgroup_t:file { getattr open read write };\nallow container_t container_var_lib_t:file { ioctl lock open read execute execute_no_trans };\nallow container_t container_file_t:dir search;\nallow container_t container_file_t:file { search read unlink };\nallow container_t container_file_t:lnk_file read;\nallow container_t jboss_management_port_t:tcp_socket { name_bind name_connect };\nallow container_t redis_port_t:tcp_socket { name_bind name_connect };\nallow container_t commplex_link_port_t:tcp_socket { name_bind name_connect };\nallow container_t commplex_main_port_t:tcp_socket { name_bind name_connect };\nallow container_t unreserved_port_t:tcp_socket { name_bind name_connect };\nallow container_t unreserved_port_t:udp_socket { name_bind name_connect };\nallow container_t unconfined_service_t:fifo_file open;\nallow container_t kubernetes_port_t:tcp_socket { name_connect name_bind };\nallow container_t geneve_port_t:tcp_socket name_bind;\nallow container_t pki_ca_port_t:tcp_socket { name_connect name_bind };\nallow container_t gatekeeper_port_t:tcp_socket { name_connect name_bind };\nallow container_t amqp_port_t:tcp_socket { name_connect name_bind };\nallow container_t cyphesis_port_t:tcp_socket { name_connect name_bind };\nallow container_t ephemeral_port_t:tcp_socket { name_connect name_bind };\nallow container_t epmd_port_t:tcp_socket { name_connect name_bind };\nallow container_t hplip_port_t:tcp_socket { name_connect name_bind };\nallow container_t rabbitmq_port_t:tcp_socket { name_connect name_bind };\nallow container_t transproxy_port_t:tcp_socket { name_connect name_bind };\nallow container_t tram_port_t:tcp_socket { name_connect name_bind };\nallow container_t syslogd_var_run_t:file read;\nallow container_t afs3_callback_port_t:tcp_socket { name_connect name_bind };\nallow container_t kernel_t:system module_request;\nallow container_t ntop_port_t:tcp_socket { name_connect name_bind };\nallow container_t proc_t:filesystem associate;\nallow container_t usr_t:dir write;\nallow container_t kerberos_port_t:tcp_socket { name_connect name_bind };\n#============= rngd_t ==============\nallow rngd_t cert_t:dir search;\nallow rngd_t self:process setsched;\n#============= sshd_t ==============\nallow sshd_t unlabeled_t:file { lock open read write };\nallow sshd_t chkpwd_t:process { noatsecure rlimitinh siginh };\nallow sshd_t ec2_instance_connect_t:process { noatsecure rlimitinh siginh };\n#============= syslogd_t ==============\nallow syslogd_t unlabeled_t:file { open ioctl unlink read append getattr };\n#============= unconfined_service_t ==============\nallow unconfined_service_t container_t:process transition;\nallow unconfined_service_t container_t:process2 nnp_transition;\n#============= postfix_master_t ==============\nallow postfix_master_t kernel_t:system module_request;\nallow postfix_master_t postfix_pickup_t:process { noatsecure rlimitinh siginh };\nallow postfix_master_t postfix_qmgr_t:process { noatsecure rlimitinh siginh };\n#============= postfix_pickup_t ==============\nallow postfix_pickup_t kernel_t:system module_request;\n#============= postfix_qmgr_t ==============\nallow postfix_qmgr_t kernel_t:system module_request;\n#============= irqbalance_t ==============\nallow irqbalance_t unlabeled_t:file { open read };\n#============= logrotate_t ==============\nallow logrotate_t unlabeled_t:dir { open read };\n\nEOF\ncheckmodule -M -m -o /tmp/kubemod.mod /tmp/kubemod.te\nsemodule_package -o /tmp/kubemod.pp -m /tmp/kubemod.mod\nsemodule -i /tmp/kubemod.pp\nrestorecon -R /var/log\ntouch /.autorelabel\ntouch /etc/.firstboot_done\nreboot\n"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "workers_userdata",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "229a94d4fb92e7724b0aa9f3834e26d9f2a623e68200e4e72b31d005217d33df",
            "rendered": "MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"//\"\n\n--//\nContent-Type: text/cloud-config; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"cloud-config.txt\"\n\n#cloud-config\ncloud_final_modules:\n- [scripts-user, always]\n\n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n#!/bin/bash -xe\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n[[ -f /etc/.firstboot_done ]] || {\n\n## Install requirements\nrpm -qa | grep parted || yum install -y parted\nrpm -qa | grep rsync || yum install -y rsync\n\n## Install Amazon SSM Agent\nrpm -qa | grep amazon-ssm-agent || yum install -y https://s3.ap-southeast-2.amazonaws.com/amazon-ssm-ap-southeast-2/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl enable amazon-ssm-agent\ncat \u003c\u003c EOF \u003e\u003e /etc/amazon/ssm/seelog.xml\n\u003c!--amazon-ssm-agent uses seelog logging --\u003e\n\u003c!--Seelog has github wiki pages, which contain detailed how-tos references: https://github.com/cihub/seelog/wiki --\u003e\n\u003c!--Seelog examples can be found here: https://github.com/cihub/seelog-examples --\u003e\n\u003cseelog type=\"adaptive\" mininterval=\"2000000\" maxinterval=\"100000000\" critmsgcount=\"500\" minlevel=\"info\"\u003e\n    \u003cexceptions\u003e\n        \u003cexception filepattern=\"test*\" minlevel=\"error\"/\u003e\n    \u003c/exceptions\u003e\n    \u003coutputs formatid=\"fmtinfo\"\u003e\n        \u003cconsole formatid=\"fmtinfo\"/\u003e\n        \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/amazon-ssm-agent.log\" maxsize=\"30000000\" maxrolls=\"5\"/\u003e\n        \u003cfilter levels=\"error,critical\" formatid=\"fmterror\"\u003e\n            \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/errors.log\" maxsize=\"10000000\" maxrolls=\"5\"/\u003e\n        \u003c/filter\u003e\n        \u003ccustom name=\"cloudwatch_receiver\" formatid=\"fmtdebug\" data-log-group=\"/aws/eks/nokia-lab4/cluster\"/\u003e\n    \u003c/outputs\u003e\n    \u003cformats\u003e\n        \u003cformat id=\"fmterror\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtdebug\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtinfo\" format=\"%Date %Time %LEVEL %Msg%n\"/\u003e\n    \u003c/formats\u003e\n\u003c/seelog\u003e\nEOF\nsystemctl restart amazon-ssm-agent\n\n## Partitioning\nparted --script /dev/nvme1n1 \\\nmklabel gpt \\\nmkpart log ext4 0% 100%\npartprobe\n\n## Format new partition\nmkfs.ext4 /dev/nvme1n1p1\n\n## Automatic mount\ncat \u003c\u003c EOF \u003e\u003e /etc/fstab\ntmpfs   /tmp            tmpfs     defaults,size=1g,mode=1777,nodev,noexec,nosuid  0       0\n/tmp    /var/tmp        none      rw,nodev,noexec,nosuid,bind     0       0\ntmpfs   /dev/shm        tmpfs     noexec,nosuid,nodev    0       0\nEOF\n\n# /var/log\necho \"$(blkid | grep nvme1n1p1 | awk '{print $2}') /var/log ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\nmkdir -p /tmp/log\nmount /dev/nvme1n1p1 /tmp/log\nrsync -av /var/log/ /tmp/log\numount /tmp/log\nmount /dev/nvme1n1p1 /var/log\nchmod -R 777 /var/log\n\n# Reload fstab\nmount -a\n\nkubelet_service=\"/etc/systemd/system/kubelet.service\"\n\n\n# Docker options set sysconfig environment file\ncat \u003c\u003c EOF \u003e\u003e /etc/sysconfig/docker\n\nOPTIONS='--selinux-enabled=true --exec-opt=native.cgroupdriver=systemd --storage-opt overlay2.override_kernel_check=true --userland-proxy=false'\nEOF\nsystemctl restart docker\n\n\n# Allow user supplied pre userdata code\n\n\n# Systemd does not support appending environment variables. Add a new variable\nsed -i 's/KUBELET_EXTRA_ARGS/KUBELET_EXTRA_ARGS $EXTENDED_KUBELET_ARGS/' $kubelet_service\ncat \u003c\u003c EOF \u003e /etc/systemd/system/kubelet.service.d/9999-extended-kubelet-args.conf\n[Service]\nEnvironment='EXTENDED_KUBELET_ARGS=--cgroup-driver=systemd'\nEOF\nsystemctl daemon-reload\n\n# Allow user supplied userdata code\n\n\n\n# Point resolv.conf to NodeLocal DNS\necho \"supersede domain-name-servers 127.0.0.1,169.254.169.253;\" \u003e\u003e /etc/dhcp/dhclient.conf \u0026\u0026 dhclient -r \u0026\u0026 dhclient\n# We always use image-id in launch-template which means it is considered as custom AMI\nB64_CLUSTER_CA=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1USXhNekExTkRRMU4xb1hEVE15TVRJeE1EQTFORFExTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUFFuClBBTTV0VjRDZ3JNZld4Y3htUmFselR4Q3REMFFyZzN2MW1mTDByV3hiMDhFb2xJK01lRUNic1lyRHc4MXExRVEKMmFJU0tFTlpGNTBjZ3Z6dm5ybGRxZTJUb3BXeU9yNDAvT0hHTFpPakRwZVEzS3ZSYWQ1WDNocms3YXExaVUxbwpzaVNJN2xSbGdWU05zb0pFbkFVMHRpM1BleXdiTVJzSWc0R1JLcHVJZVdMOFVBQ0tGdW1WdFdOWVZSS1RveEowClFwRVpPUFdpU1hzdDEweVoxaHVVbEM4Tm5kSTFZTUwxd1NwbEM2ZFRzQlQ3akxuRHh6c0djT0ZRWk9qUkFPZ2MKSVdxSVNwMjU4ODJMZDhxeVVnMHo1aUJtUmpjK1Q2SlBwSWp6UnA3NGdNbWRxSWV1VjNuT1ZBaHRIYStMV2F0aQpaNkg0Vktaa2swVjVjQ0JMZ1FNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJdi9NWnIwZDhYeENLWEdQY1djOC93aE1kMkhNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRC8zdmxWSXNzVjc3K3FnSHNvQQp6RHZFcG93bzdvNDV0WHpWYzZKVi9XUmdsVVZ6eFR2bmNVV3l3WnZPekNBZDRnZStyMy83cUFacWVxUzgySlRGCmRLb1hSd2J0TldpZno3dGR5cmNvY0JsMWlvZC83R1BHemwxaUpNUC85WTJNWjZGYWlrczJIZ1dMKzZLaThRM0oKRWJNRWhReWtOQmpMb1FwUVpMSDdWZEF4bCs5c0txTmFHazRPWUUxQml1b3JRSm53RnJ2WmFBMndidk1KNVFMYgpqWEp2NXR1VTBHZnNjeE9jdEEwL1VXcU5JVUdLdWpMTFNqWk5nYXg1RW4vTDgxM29PU0wrUitEV1cyOFhhV0FFCkhrQzFYVUdPbUczQWJjbnBaVCt6MGhsZzVtOXRVZmNET0czejk5OVNreDFMUHV4RmdqTjNCbVVqK2pIWk9nUUwKMElzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\nAPI_SERVER_URL=https://09EC52C85710A0FD369918C20889719A.gr7.ap-southeast-2.eks.amazonaws.com\n/etc/eks/bootstrap.sh nokia-lab4 --b64-cluster-ca $B64_CLUSTER_CA --apiserver-endpoint $API_SERVER_URL --container-runtime dockerd\n\ntouch /etc/.firstboot_done\n}\n\n\n\n",
            "template": "MIME-Version: 1.0\nContent-Type: multipart/mixed; boundary=\"//\"\n\n--//\nContent-Type: text/cloud-config; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"cloud-config.txt\"\n\n#cloud-config\ncloud_final_modules:\n- [scripts-user, always]\n\n--//\nContent-Type: text/x-shellscript; charset=\"us-ascii\"\n#!/bin/bash -xe\n\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\n\n[[ -f /etc/.firstboot_done ]] || {\n\n## Install requirements\nrpm -qa | grep parted || yum install -y parted\nrpm -qa | grep rsync || yum install -y rsync\n\n## Install Amazon SSM Agent\nrpm -qa | grep amazon-ssm-agent || yum install -y https://s3.${region}.amazonaws.com/amazon-ssm-${region}/latest/linux_amd64/amazon-ssm-agent.rpm\nsystemctl enable amazon-ssm-agent\ncat \u003c\u003c EOF \u003e\u003e /etc/amazon/ssm/seelog.xml\n${seelog_file}\nEOF\nsystemctl restart amazon-ssm-agent\n\n## Partitioning\nparted --script /dev/nvme1n1 \\\nmklabel gpt \\\nmkpart log ext4 0% 100%\npartprobe\n\n## Format new partition\nmkfs.ext4 /dev/nvme1n1p1\n\n## Automatic mount\ncat \u003c\u003c EOF \u003e\u003e /etc/fstab\ntmpfs   /tmp            tmpfs     defaults,size=1g,mode=1777,nodev,noexec,nosuid  0       0\n/tmp    /var/tmp        none      rw,nodev,noexec,nosuid,bind     0       0\ntmpfs   /dev/shm        tmpfs     noexec,nosuid,nodev    0       0\nEOF\n\n# /var/log\necho \"$(blkid | grep nvme1n1p1 | awk '{print $2}') /var/log ext4 defaults,nofail 0 2\" \u003e\u003e /etc/fstab\nmkdir -p /tmp/log\nmount /dev/nvme1n1p1 /tmp/log\nrsync -av /var/log/ /tmp/log\numount /tmp/log\nmount /dev/nvme1n1p1 /var/log\nchmod -R 777 /var/log\n\n# Reload fstab\nmount -a\n\nkubelet_service=\"/etc/systemd/system/kubelet.service\"\n\n%{ if container_runtime == \"containerd\" }\nkubelet_service=\"/etc/eks/containerd/kubelet-containerd.service\"\nconf=/etc/eks/containerd/containerd-config.toml\n# EKS bootstrap script moves $conf to /etc/eks/containerd/config.toml\nsection=\"\\[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd.runtimes.runc.options\\]\"\nkey=\"SystemdCgroup\"\ngrep -q $section $conf || sed -i \"/^runtime_type.*/a $section\" $conf\ngrep -q $key $conf || sed -i \"/$section.*/a $key = true\" $conf\n%{ else }\n# Docker options set sysconfig environment file\ncat \u003c\u003c EOF \u003e\u003e /etc/sysconfig/docker\n\nOPTIONS='${docker_opts}'\nEOF\nsystemctl restart docker\n%{ endif }\n\n# Allow user supplied pre userdata code\n${pre_userdata}\n\n# Systemd does not support appending environment variables. Add a new variable\nsed -i 's/KUBELET_EXTRA_ARGS/KUBELET_EXTRA_ARGS $EXTENDED_KUBELET_ARGS/' $kubelet_service\ncat \u003c\u003c EOF \u003e /etc/systemd/system/kubelet.service.d/9999-extended-kubelet-args.conf\n[Service]\nEnvironment='EXTENDED_KUBELET_ARGS=${kubelet_extra_args}'\nEOF\nsystemctl daemon-reload\n\n# Allow user supplied userdata code\n${additional_userdata}\n\n# Point resolv.conf to NodeLocal DNS\necho \"supersede domain-name-servers 127.0.0.1,169.254.169.253;\" \u003e\u003e /etc/dhcp/dhclient.conf \u0026\u0026 dhclient -r \u0026\u0026 dhclient\n# We always use image-id in launch-template which means it is considered as custom AMI\nB64_CLUSTER_CA=${cluster_ca}\nAPI_SERVER_URL=${cluster_ep}\n/etc/eks/bootstrap.sh ${cluster_name} --b64-cluster-ca $B64_CLUSTER_CA --apiserver-endpoint $API_SERVER_URL --container-runtime ${container_runtime}\n\ntouch /etc/.firstboot_done\n}\n\n%{ if container_runtime == \"containerd\" }\nln -sf /run/containerd/containerd.sock /run/dockershim.sock\nsystemctl daemon-reload\nsystemctl start kubelet\n%{ endif }\n\n",
            "vars": {
              "additional_userdata": "\n",
              "bootstrap_extra_args": "",
              "cluster_ca": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1USXhNekExTkRRMU4xb1hEVE15TVRJeE1EQTFORFExTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUFFuClBBTTV0VjRDZ3JNZld4Y3htUmFselR4Q3REMFFyZzN2MW1mTDByV3hiMDhFb2xJK01lRUNic1lyRHc4MXExRVEKMmFJU0tFTlpGNTBjZ3Z6dm5ybGRxZTJUb3BXeU9yNDAvT0hHTFpPakRwZVEzS3ZSYWQ1WDNocms3YXExaVUxbwpzaVNJN2xSbGdWU05zb0pFbkFVMHRpM1BleXdiTVJzSWc0R1JLcHVJZVdMOFVBQ0tGdW1WdFdOWVZSS1RveEowClFwRVpPUFdpU1hzdDEweVoxaHVVbEM4Tm5kSTFZTUwxd1NwbEM2ZFRzQlQ3akxuRHh6c0djT0ZRWk9qUkFPZ2MKSVdxSVNwMjU4ODJMZDhxeVVnMHo1aUJtUmpjK1Q2SlBwSWp6UnA3NGdNbWRxSWV1VjNuT1ZBaHRIYStMV2F0aQpaNkg0Vktaa2swVjVjQ0JMZ1FNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJdi9NWnIwZDhYeENLWEdQY1djOC93aE1kMkhNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRC8zdmxWSXNzVjc3K3FnSHNvQQp6RHZFcG93bzdvNDV0WHpWYzZKVi9XUmdsVVZ6eFR2bmNVV3l3WnZPekNBZDRnZStyMy83cUFacWVxUzgySlRGCmRLb1hSd2J0TldpZno3dGR5cmNvY0JsMWlvZC83R1BHemwxaUpNUC85WTJNWjZGYWlrczJIZ1dMKzZLaThRM0oKRWJNRWhReWtOQmpMb1FwUVpMSDdWZEF4bCs5c0txTmFHazRPWUUxQml1b3JRSm53RnJ2WmFBMndidk1KNVFMYgpqWEp2NXR1VTBHZnNjeE9jdEEwL1VXcU5JVUdLdWpMTFNqWk5nYXg1RW4vTDgxM29PU0wrUitEV1cyOFhhV0FFCkhrQzFYVUdPbUczQWJjbnBaVCt6MGhsZzVtOXRVZmNET0czejk5OVNreDFMUHV4RmdqTjNCbVVqK2pIWk9nUUwKMElzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "cluster_ep": "https://09EC52C85710A0FD369918C20889719A.gr7.ap-southeast-2.eks.amazonaws.com",
              "cluster_name": "nokia-lab4",
              "container_runtime": "dockerd",
              "docker_opts": "--selinux-enabled=true --exec-opt=native.cgroupdriver=systemd --storage-opt overlay2.override_kernel_check=true --userland-proxy=false",
              "kubelet_extra_args": "--cgroup-driver=systemd",
              "pre_userdata": "",
              "region": "ap-southeast-2",
              "seelog_file": "\u003c!--amazon-ssm-agent uses seelog logging --\u003e\n\u003c!--Seelog has github wiki pages, which contain detailed how-tos references: https://github.com/cihub/seelog/wiki --\u003e\n\u003c!--Seelog examples can be found here: https://github.com/cihub/seelog-examples --\u003e\n\u003cseelog type=\"adaptive\" mininterval=\"2000000\" maxinterval=\"100000000\" critmsgcount=\"500\" minlevel=\"info\"\u003e\n    \u003cexceptions\u003e\n        \u003cexception filepattern=\"test*\" minlevel=\"error\"/\u003e\n    \u003c/exceptions\u003e\n    \u003coutputs formatid=\"fmtinfo\"\u003e\n        \u003cconsole formatid=\"fmtinfo\"/\u003e\n        \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/amazon-ssm-agent.log\" maxsize=\"30000000\" maxrolls=\"5\"/\u003e\n        \u003cfilter levels=\"error,critical\" formatid=\"fmterror\"\u003e\n            \u003crollingfile type=\"size\" filename=\"/var/log/amazon/ssm/errors.log\" maxsize=\"10000000\" maxrolls=\"5\"/\u003e\n        \u003c/filter\u003e\n        \u003ccustom name=\"cloudwatch_receiver\" formatid=\"fmtdebug\" data-log-group=\"/aws/eks/nokia-lab4/cluster\"/\u003e\n    \u003c/outputs\u003e\n    \u003cformats\u003e\n        \u003cformat id=\"fmterror\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtdebug\" format=\"%Date %Time %LEVEL [%FuncShort @ %File.%Line] %Msg%n\"/\u003e\n        \u003cformat id=\"fmtinfo\" format=\"%Date %Time %LEVEL %Msg%n\"/\u003e\n    \u003c/formats\u003e\n\u003c/seelog\u003e",
              "selinux": "permissive",
              "selinux_booleans": "setsebool -P named_write_master_zones on\nsetsebool -P virt_use_nfs on\nsetsebool -P  container_connect_any on\n",
              "selinux_policies": "cat \u003c\u003c EOF \u003e /tmp/kubemod.te\n\nmodule kubemod 1.0;\nrequire {\n\ttype admin_home_t;\n\ttype auditd_t;\n\ttype afs3_callback_port_t;\n\ttype bin_t;\n\ttype cert_t;\n\ttype cephfs_t;\n\ttype commplex_link_port_t;\n\ttype commplex_main_port_t;\n\ttype chronyd_t;\n\ttype container_t;\n\ttype container_file_t;\n\ttype container_var_lib_t;\n\ttype cgroup_t;\n\ttype chkpwd_t;\n\ttype dhcpc_t;\n\ttype dns_port_t;\n\ttype ec2_instance_connect_t;\n\ttype etc_t;\n\ttype fusefs_t;\n\ttype geneve_port_t;\n\ttype gatekeeper_port_t;\n\ttype hostname_t;\n\ttype http_port_t;\n\ttype http_cache_port_t;\n\ttype ifconfig_t;\n\ttype irqbalance_t;\n\ttype jboss_management_port_t;\n\ttype kerberos_port_t;\n\ttype kernel_t;\n\ttype kubernetes_port_t;\n\ttype logrotate_t;\n\ttype mysqld_port_t;\n\ttype node_t;\n\ttype nfs_t;\n\ttype ntop_port_t;\n\ttype postgresql_port_t;\n\ttype postfix_pickup_t;\n\ttype postfix_master_t;\n\ttype postfix_qmgr_t;\n\ttype pki_ca_port_t;\n\ttype proc_t;\n\ttype rngd_t;\n\ttype redis_port_t;\n\ttype websm_port_t;\n\ttype setfiles_t;\n\ttype sshd_t;\n\ttype sysfs_t;\n\ttype syslogd_t;\n\ttype syslogd_var_run_t;\n\ttype soundd_port_t;\n\ttype unconfined_service_t;\n\ttype unlabeled_t;\n\ttype unreserved_port_t;\n\ttype usr_t;\n\ttype epmd_port_t;\n\ttype hplip_port_t;\n\ttype rabbitmq_port_t;\n\ttype ephemeral_port_t;\n\ttype cyphesis_port_t;\n\ttype amqp_port_t;\n\ttype transproxy_port_t;\n\ttype tram_port_t;\n\tclass capability { audit_write chown fowner dac_override net_bind_service setuid setgid };\n\tclass netlink_route_socket { setopt getopt bind create getattr nlmsg_read read  write};\n\tclass netlink_audit_socket { setopt getopt bind create getattr nlmsg_relay nlmsg_read read  write };\n\tclass dir { open add_name remove_name rmdir create write read setattr search };\n\tclass file { append execute create getattr ioctl lock open rename read setattr unlink write execute_no_trans search };\n\tclass lnk_file { create read write unlink setattr getattr };\n\tclass filesystem associate;\n\tclass fifo_file open;\n\tclass process { setsched transition execmem noatsecure rlimitinh siginh };\n\tclass process2 nnp_transition;\n\tclass system module_request;\n\tclass tcp_socket { accept read write bind connect create getattr listen name_bind name_connect node_bind getopt setopt shutdown };\n\tclass udp_socket { bind read write connect create getattr name_bind name_connect node_bind getopt setopt ioctl };\n}\n#============= auditd_t ==============\nallow auditd_t unlabeled_t:dir { add_name read remove_name write setattr };\nallow auditd_t unlabeled_t:file { append ioctl read create getattr open rename setattr unlink };\n#============= dhcpc_t ==============\nallow dhcpc_t hostname_t:process { noatsecure rlimitinh siginh };\nallow dhcpc_t chronyd_t:process { noatsecure rlimitinh siginh };\nallow dhcpc_t ifconfig_t:process { noatsecure rlimitinh siginh };\nallow dhcpc_t setfiles_t:process { noatsecure rlimitinh siginh };\n#============= ec2_instance_connect_t ==============\nallow ec2_instance_connect_t kernel_t:system module_request;\n#============= container_t ==============\nallow container_t admin_home_t:file open;\nallow container_t bin_t:file { create setattr write rename unlink };\nallow container_t bin_t:dir { add_name remove_name write };\nallow container_t etc_t:dir { add_name remove_name setattr write };\nallow container_t etc_t:file { create rename setattr unlink write };\nallow container_t self:capability { audit_write chown fowner setuid setgid dac_override net_bind_service };\nallow container_t self:netlink_route_socket { setopt bind create  read write getattr nlmsg_read};\nallow container_t self:netlink_audit_socket { write create nlmsg_relay };\nallow container_t self:tcp_socket { accept read write bind connect create getopt getattr listen setopt shutdown };\nallow container_t self:udp_socket { ioctl read write bind connect create getattr getopt setopt };\nallow container_t self:process execmem;\nallow container_t self:dir { add_name write };\nallow container_t self:file { read create };\nallow container_t postgresql_port_t:tcp_socket { name_bind name_connect };\nallow container_t mysqld_port_t:tcp_socket { name_bind name_connect };\nallow container_t websm_port_t:tcp_socket { name_bind name_connect };\nallow container_t dns_port_t:tcp_socket { name_bind name_connect };\nallow container_t dns_port_t:udp_socket name_bind;\nallow container_t fusefs_t:dir setattr;\nallow container_t fusefs_t:file { execute execute_no_trans };\nallow container_t fusefs_t:lnk_file { create read getattr };\nallow container_t cephfs_t:dir { add_name create read remove_name rmdir setattr write };\nallow container_t cephfs_t:file { create execute execute_no_trans rename setattr unlink };\nallow container_t cephfs_t:lnk_file { getattr setattr read write create unlink };\nallow container_t http_cache_port_t:tcp_socket { name_bind name_connect };\nallow container_t http_port_t:tcp_socket { name_bind name_connect };\nallow container_t node_t:tcp_socket node_bind;\nallow container_t node_t:udp_socket node_bind;\nallow container_t nfs_t:dir write;\nallow container_t soundd_port_t:tcp_socket name_bind;\nallow container_t sysfs_t:file { open read getattr };\nallow container_t sysfs_t:dir { open read };\nallow container_t sysfs_t:lnk_file { read getattr };\nallow container_t cgroup_t:file { getattr open read write };\nallow container_t container_var_lib_t:file { ioctl lock open read execute execute_no_trans };\nallow container_t container_file_t:dir search;\nallow container_t container_file_t:file { search read unlink };\nallow container_t container_file_t:lnk_file read;\nallow container_t jboss_management_port_t:tcp_socket { name_bind name_connect };\nallow container_t redis_port_t:tcp_socket { name_bind name_connect };\nallow container_t commplex_link_port_t:tcp_socket { name_bind name_connect };\nallow container_t commplex_main_port_t:tcp_socket { name_bind name_connect };\nallow container_t unreserved_port_t:tcp_socket { name_bind name_connect };\nallow container_t unreserved_port_t:udp_socket { name_bind name_connect };\nallow container_t unconfined_service_t:fifo_file open;\nallow container_t kubernetes_port_t:tcp_socket { name_connect name_bind };\nallow container_t geneve_port_t:tcp_socket name_bind;\nallow container_t pki_ca_port_t:tcp_socket { name_connect name_bind };\nallow container_t gatekeeper_port_t:tcp_socket { name_connect name_bind };\nallow container_t amqp_port_t:tcp_socket { name_connect name_bind };\nallow container_t cyphesis_port_t:tcp_socket { name_connect name_bind };\nallow container_t ephemeral_port_t:tcp_socket { name_connect name_bind };\nallow container_t epmd_port_t:tcp_socket { name_connect name_bind };\nallow container_t hplip_port_t:tcp_socket { name_connect name_bind };\nallow container_t rabbitmq_port_t:tcp_socket { name_connect name_bind };\nallow container_t transproxy_port_t:tcp_socket { name_connect name_bind };\nallow container_t tram_port_t:tcp_socket { name_connect name_bind };\nallow container_t syslogd_var_run_t:file read;\nallow container_t afs3_callback_port_t:tcp_socket { name_connect name_bind };\nallow container_t kernel_t:system module_request;\nallow container_t ntop_port_t:tcp_socket { name_connect name_bind };\nallow container_t proc_t:filesystem associate;\nallow container_t usr_t:dir write;\nallow container_t kerberos_port_t:tcp_socket { name_connect name_bind };\n#============= rngd_t ==============\nallow rngd_t cert_t:dir search;\nallow rngd_t self:process setsched;\n#============= sshd_t ==============\nallow sshd_t unlabeled_t:file { lock open read write };\nallow sshd_t chkpwd_t:process { noatsecure rlimitinh siginh };\nallow sshd_t ec2_instance_connect_t:process { noatsecure rlimitinh siginh };\n#============= syslogd_t ==============\nallow syslogd_t unlabeled_t:file { open ioctl unlink read append getattr };\n#============= unconfined_service_t ==============\nallow unconfined_service_t container_t:process transition;\nallow unconfined_service_t container_t:process2 nnp_transition;\n#============= postfix_master_t ==============\nallow postfix_master_t kernel_t:system module_request;\nallow postfix_master_t postfix_pickup_t:process { noatsecure rlimitinh siginh };\nallow postfix_master_t postfix_qmgr_t:process { noatsecure rlimitinh siginh };\n#============= postfix_pickup_t ==============\nallow postfix_pickup_t kernel_t:system module_request;\n#============= postfix_qmgr_t ==============\nallow postfix_qmgr_t kernel_t:system module_request;\n#============= irqbalance_t ==============\nallow irqbalance_t unlabeled_t:file { open read };\n#============= logrotate_t ==============\nallow logrotate_t unlabeled_t:dir { open read };\n\nEOF\ncheckmodule -M -m -o /tmp/kubemod.mod /tmp/kubemod.te\nsemodule_package -o /tmp/kubemod.pp -m /tmp/kubemod.mod\nsemodule -i /tmp/kubemod.pp\nrestorecon -R /var/log\ntouch /.autorelabel\ntouch /etc/.firstboot_done\nreboot\n"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:security-group/sg-093d8791d71cfadfd",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-093d8791d71cfadfd",
            "ingress": [],
            "name": "default",
            "owner_id": "126494010021",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4"
            },
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_efs_file_system",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:elasticfilesystem:ap-southeast-2:126494010021:file-system/fs-076ff34ca5040bad4",
            "availability_zone_id": "",
            "availability_zone_name": "",
            "creation_token": "terraform-20221213053747368900000001",
            "dns_name": "fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "encrypted": true,
            "id": "fs-076ff34ca5040bad4",
            "kms_key_id": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "lifecycle_policy": [
              {
                "transition_to_ia": "AFTER_30_DAYS",
                "transition_to_primary_storage_class": ""
              }
            ],
            "number_of_mount_targets": 0,
            "owner_id": "126494010021",
            "performance_mode": "generalPurpose",
            "provisioned_throughput_in_mibps": 0,
            "size_in_bytes": [
              {
                "value": 6144,
                "value_in_ia": 0,
                "value_in_standard": 6144
              }
            ],
            "tags": {
              "Name": "nokia-lab4-efs"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-efs"
            },
            "throughput_mode": "bursting"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_kms_alias.cluster",
            "aws_kms_key.this",
            "data.aws_caller_identity.current",
            "data.aws_iam_role.nodes",
            "data.aws_kms_key.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_efs_mount_target",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "availability_zone_id": "apse2-az3",
            "availability_zone_name": "ap-southeast-2b",
            "dns_name": "fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "file_system_arn": "arn:aws:elasticfilesystem:ap-southeast-2:126494010021:file-system/fs-076ff34ca5040bad4",
            "file_system_id": "fs-076ff34ca5040bad4",
            "id": "fsmt-0664cb2e46963d6bc",
            "ip_address": "10.15.3.47",
            "mount_target_dns_name": "ap-southeast-2b.fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "network_interface_id": "eni-0a1769b0659960364",
            "owner_id": "126494010021",
            "security_groups": [
              "sg-0b1ec5e7e157fb7a6",
              "sg-0dca0e02c77373fd4"
            ],
            "subnet_id": "subnet-058d18852b903ca2b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_efs_file_system.this",
            "aws_eip.nat",
            "aws_eks_cluster.this",
            "aws_internet_gateway.this",
            "aws_kms_alias.cluster",
            "aws_kms_key.this",
            "aws_nat_gateway.this",
            "aws_security_group.cluster",
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs",
            "data.aws_caller_identity.current",
            "data.aws_iam_role.eks",
            "data.aws_iam_role.nodes",
            "data.aws_kms_key.cluster",
            "data.aws_subnet_ids.private",
            "data.aws_subnet_ids.vpc",
            "time_sleep.wait_10_seconds"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "availability_zone_id": "apse2-az2",
            "availability_zone_name": "ap-southeast-2c",
            "dns_name": "fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "file_system_arn": "arn:aws:elasticfilesystem:ap-southeast-2:126494010021:file-system/fs-076ff34ca5040bad4",
            "file_system_id": "fs-076ff34ca5040bad4",
            "id": "fsmt-0aad5c8cd786f472d",
            "ip_address": "10.15.5.114",
            "mount_target_dns_name": "ap-southeast-2c.fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "network_interface_id": "eni-02fcdc61988d804d7",
            "owner_id": "126494010021",
            "security_groups": [
              "sg-0b1ec5e7e157fb7a6",
              "sg-0dca0e02c77373fd4"
            ],
            "subnet_id": "subnet-087f49635a3f662c7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_efs_file_system.this",
            "aws_eip.nat",
            "aws_eks_cluster.this",
            "aws_internet_gateway.this",
            "aws_kms_alias.cluster",
            "aws_kms_key.this",
            "aws_nat_gateway.this",
            "aws_security_group.cluster",
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs",
            "data.aws_caller_identity.current",
            "data.aws_iam_role.eks",
            "data.aws_iam_role.nodes",
            "data.aws_kms_key.cluster",
            "data.aws_subnet_ids.private",
            "data.aws_subnet_ids.vpc",
            "time_sleep.wait_10_seconds"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "availability_zone_id": "apse2-az1",
            "availability_zone_name": "ap-southeast-2a",
            "dns_name": "fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "file_system_arn": "arn:aws:elasticfilesystem:ap-southeast-2:126494010021:file-system/fs-076ff34ca5040bad4",
            "file_system_id": "fs-076ff34ca5040bad4",
            "id": "fsmt-0178157e0d05a70bd",
            "ip_address": "10.15.1.96",
            "mount_target_dns_name": "ap-southeast-2a.fs-076ff34ca5040bad4.efs.ap-southeast-2.amazonaws.com",
            "network_interface_id": "eni-096e015cf1f1d5469",
            "owner_id": "126494010021",
            "security_groups": [
              "sg-0b1ec5e7e157fb7a6",
              "sg-0dca0e02c77373fd4"
            ],
            "subnet_id": "subnet-08fbb1f98b5b27244"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_efs_file_system.this",
            "aws_eip.nat",
            "aws_eks_cluster.this",
            "aws_internet_gateway.this",
            "aws_kms_alias.cluster",
            "aws_kms_key.this",
            "aws_nat_gateway.this",
            "aws_security_group.cluster",
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs",
            "data.aws_caller_identity.current",
            "data.aws_iam_role.eks",
            "data.aws_iam_role.nodes",
            "data.aws_kms_key.cluster",
            "data.aws_subnet_ids.private",
            "data.aws_subnet_ids.vpc",
            "time_sleep.wait_10_seconds"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0a527e62f43e4c3ce",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-08dcfa7325a0a2321",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0a527e62f43e4c3ce",
            "instance": "",
            "network_border_group": "ap-southeast-2",
            "network_interface": "eni-09e66248571f6fc61",
            "private_dns": "ip-10-15-0-74.ap-southeast-2.compute.internal",
            "private_ip": "10.15.0.74",
            "public_dns": "ec2-3-24-86-204.ap-southeast-2.compute.amazonaws.com",
            "public_ip": "3.24.86.204",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "nokia-lab4-ap-southeast-2a-eip"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-ap-southeast-2a-eip"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0cfaa091d376666c9",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-04549498726f6dfb8",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0cfaa091d376666c9",
            "instance": "",
            "network_border_group": "ap-southeast-2",
            "network_interface": "eni-09c0e81b16a21da56",
            "private_dns": "ip-10-15-2-100.ap-southeast-2.compute.internal",
            "private_ip": "10.15.2.100",
            "public_dns": "ec2-52-64-27-24.ap-southeast-2.compute.amazonaws.com",
            "public_ip": "52.64.27.24",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "nokia-lab4-ap-southeast-2b-eip"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-ap-southeast-2b-eip"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0f679a49a8d642e1e",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-0a0b709f407932aa1",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0f679a49a8d642e1e",
            "instance": "",
            "network_border_group": "ap-southeast-2",
            "network_interface": "eni-050287dbcc60cb61e",
            "private_dns": "ip-10-15-4-201.ap-southeast-2.compute.internal",
            "private_ip": "10.15.4.201",
            "public_dns": "ec2-54-253-181-221.ap-southeast-2.compute.amazonaws.com",
            "public_ip": "54.253.181.221",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "nokia-lab4-ap-southeast-2c-eip"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-ap-southeast-2c-eip"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:ap-southeast-2:126494010021:cluster/nokia-lab4",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1USXhNekExTkRRMU4xb1hEVE15TVRJeE1EQTFORFExTjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBUFFuClBBTTV0VjRDZ3JNZld4Y3htUmFselR4Q3REMFFyZzN2MW1mTDByV3hiMDhFb2xJK01lRUNic1lyRHc4MXExRVEKMmFJU0tFTlpGNTBjZ3Z6dm5ybGRxZTJUb3BXeU9yNDAvT0hHTFpPakRwZVEzS3ZSYWQ1WDNocms3YXExaVUxbwpzaVNJN2xSbGdWU05zb0pFbkFVMHRpM1BleXdiTVJzSWc0R1JLcHVJZVdMOFVBQ0tGdW1WdFdOWVZSS1RveEowClFwRVpPUFdpU1hzdDEweVoxaHVVbEM4Tm5kSTFZTUwxd1NwbEM2ZFRzQlQ3akxuRHh6c0djT0ZRWk9qUkFPZ2MKSVdxSVNwMjU4ODJMZDhxeVVnMHo1aUJtUmpjK1Q2SlBwSWp6UnA3NGdNbWRxSWV1VjNuT1ZBaHRIYStMV2F0aQpaNkg0Vktaa2swVjVjQ0JMZ1FNQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJdi9NWnIwZDhYeENLWEdQY1djOC93aE1kMkhNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRC8zdmxWSXNzVjc3K3FnSHNvQQp6RHZFcG93bzdvNDV0WHpWYzZKVi9XUmdsVVZ6eFR2bmNVV3l3WnZPekNBZDRnZStyMy83cUFacWVxUzgySlRGCmRLb1hSd2J0TldpZno3dGR5cmNvY0JsMWlvZC83R1BHemwxaUpNUC85WTJNWjZGYWlrczJIZ1dMKzZLaThRM0oKRWJNRWhReWtOQmpMb1FwUVpMSDdWZEF4bCs5c0txTmFHazRPWUUxQml1b3JRSm53RnJ2WmFBMndidk1KNVFMYgpqWEp2NXR1VTBHZnNjeE9jdEEwL1VXcU5JVUdLdWpMTFNqWk5nYXg1RW4vTDgxM29PU0wrUitEV1cyOFhhV0FFCkhrQzFYVUdPbUczQWJjbnBaVCt6MGhsZzVtOXRVZmNET0czejk5OVNreDFMUHV4RmdqTjNCbVVqK2pIWk9nUUwKMElzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
              }
            ],
            "created_at": "2022-12-13 05:40:03.863 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://09EC52C85710A0FD369918C20889719A.gr7.ap-southeast-2.eks.amazonaws.com",
            "id": "nokia-lab4",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ap-southeast-2.amazonaws.com/id/09EC52C85710A0FD369918C20889719A"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "service_ipv4_cidr": "172.20.0.0/16"
              }
            ],
            "name": "nokia-lab4",
            "platform_version": "eks.5",
            "role_arn": "arn:aws:iam::126494010021:role/service_eks_cluster",
            "status": "ACTIVE",
            "tags": {},
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4"
            },
            "timeouts": {
              "create": "30m",
              "delete": "15m",
              "update": null
            },
            "version": "1.23",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0dca0e02c77373fd4",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "131.228.104.64/27",
                  "3.24.165.59/32"
                ],
                "security_group_ids": [
                  "sg-0b1ec5e7e157fb7a6"
                ],
                "subnet_ids": [
                  "subnet-058d18852b903ca2b",
                  "subnet-087f49635a3f662c7",
                  "subnet-08fbb1f98b5b27244"
                ],
                "vpc_id": "vpc-02827d6d88aa6323e"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "aws_kms_alias.cluster",
            "aws_security_group.cluster",
            "data.aws_iam_role.eks",
            "data.aws_subnet_ids.private",
            "data.aws_subnet_ids.vpc"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:internet-gateway/igw-0ea66ca34cd5214a0",
            "id": "igw-0ea66ca34cd5214a0",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-igw"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-igw"
            },
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "cluster_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:key-pair/nokia-lab4-key",
            "fingerprint": "f1:5c:52:ab:b3:45:64:4a:23:db:20:0f:46:d4:4b:69",
            "id": "nokia-lab4-key",
            "key_name": "nokia-lab4-key",
            "key_name_prefix": "",
            "key_pair_id": "key-025fe0a2742a71000",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC6KCmiSyeIKfYEK88Oxw1LVCwmRkUOv0bMKyz1U8ol6iJQzsx/avKCfLSWgCgtoSMbCAF/ai37bBxEVpvLtSEMAEoKbq57UcNVREopVLIDJ7hh0nwf7J68rMJu2Rn02N850ykntFvR7mrNTpG0WDG99T7X012K5p6dMsSgC2BGhq9/rwTNttv0bmxNQ3I50Gtwr64OjEoAqHfSCTmwOCqMVhy+8CqTOC+xZF43KGBnwu5Q/KInmTKVmMpguAzeaBwyPJnlbWQwUKWUZNXyVnahB/FE52Jbb8Pe3SIEMmWRt5evs3d20GNLplgjegvCZIRtawuUtfLCKO/P3dWVbTBX+sYdBky7ZjIRV7zd0/t0VGzQvyPm8qGyuJyleiesM49dIjI8sZrTeiQsee4MfH9i2lLhm9Gok/1f8LKFt2vdXDbUjawJkonB1nIIBWAD9fNKv5Kg5eJbj1t0TH7EuZtxBNTFlYRnMwCwvuzaTAyYW6Bwd9enUlfKduXEUobMcRZdqoi3Y0AIPJ3GEq8HZ0qlaRgYpH/wZyGDlPqbmFRL7QkGmjIwBXOYLM3NNkQtCTdoLmgRA0ETtRXo9K8kvK5aaNa3Rq6sy0lE0yl+4wcv0FR+Xi5salsD8lcxo9dNYU/zs6V75AXRoSWpsaO6Its0JF/BAz5gX/UgRosEl0bqaw==",
            "tags": {},
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-2:126494010021:alias/cluster-nokia-lab4",
            "id": "alias/cluster-nokia-lab4",
            "name": "alias/cluster-nokia-lab4",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "target_key_id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_kms_key.this",
            "data.aws_caller_identity.current",
            "data.aws_iam_role.nodes",
            "data.aws_kms_key.cluster"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "s3_artifacts",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-2:126494010021:alias/s3-artifacts-nokia-lab4",
            "id": "alias/s3-artifacts-nokia-lab4",
            "name": "alias/s3-artifacts-nokia-lab4",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "target_key_id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_kms_key.this",
            "data.aws_caller_identity.current",
            "data.aws_iam_role.nodes",
            "data.aws_kms_key.s3_artifacts"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:ap-southeast-2:126494010021:key/fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "bypass_policy_lockout_safety_check": false,
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "nokia-lab4 EKS Secret Encryption Key",
            "enable_key_rotation": true,
            "id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "is_enabled": true,
            "key_id": "fd166857-085d-45e0-8a22-a5ee3bbfe88c",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":[\"arn:aws:iam::126494010021:root\",\"arn:aws:iam::126494010021:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling\",\"arn:aws:iam::126494010021:role/service_ec2_eksnode\"]},\"Resource\":\"*\",\"Sid\":\"Enable IAM Role Permissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": {},
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "data.aws_iam_role.nodes"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "edges",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:launch-template/lt-0c7ae8ddbd5f46c96",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "true",
                    "iops": 0,
                    "kms_key_id": "arn:aws:kms:ap-southeast-2:126494010021:alias/cluster-nokia-lab4",
                    "snapshot_id": "",
                    "throughput": 0,
                    "volume_size": 50,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdf",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "true",
                    "iops": 0,
                    "kms_key_id": "arn:aws:kms:ap-southeast-2:126494010021:alias/cluster-nokia-lab4",
                    "snapshot_id": "",
                    "throughput": 0,
                    "volume_size": 50,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "default_version": 1,
            "description": "",
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-0c7ae8ddbd5f46c96",
            "image_id": "ami-06eb8d7d0eb5ee68e",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_type": "a1.2xlarge",
            "kernel_id": "",
            "key_name": "nokia-lab4-key",
            "latest_version": 1,
            "license_specification": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "nokia-lab4-edges_launch_template20221213055105560300000003",
            "name_prefix": "nokia-lab4-edges_launch_template",
            "network_interfaces": [
              {
                "associate_carrier_ip_address": "",
                "associate_public_ip_address": "false",
                "delete_on_termination": "true",
                "description": "",
                "device_index": 0,
                "interface_type": "",
                "ipv4_address_count": 0,
                "ipv4_addresses": null,
                "ipv6_address_count": 0,
                "ipv6_addresses": null,
                "network_card_index": 0,
                "network_interface_id": "",
                "private_ip_address": "",
                "security_groups": [
                  "sg-0b1ec5e7e157fb7a6"
                ],
                "subnet_id": ""
              }
            ],
            "placement": [
              {
                "affinity": "",
                "availability_zone": "",
                "group_name": "",
                "host_id": "",
                "host_resource_group_arn": "",
                "partition_number": 0,
                "spread_domain": "",
                "tenancy": "default"
              }
            ],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "volume",
                "tags": {
                  "ClusterRegion": "nokia-lab4-ap-southeast-2",
                  "Component": "EKS cluster",
                  "DeployerTool": "CsfpOps",
                  "KubernetesCluster": "nokia-lab4",
                  "Name": "nokia-lab4_eks-edges-node"
                }
              },
              {
                "resource_type": "instance",
                "tags": {
                  "ClusterRegion": "nokia-lab4-ap-southeast-2",
                  "Component": "EKS cluster",
                  "DeployerTool": "CsfpOps",
                  "KubernetesCluster": "nokia-lab4",
                  "Name": "nokia-lab4_eks-edges-node",
                  "k8s.io/cluster-autoscaler/enabled": "false",
                  "k8s.io/cluster-autoscaler/nokia-lab4": "owned",
                  "role": "['edges']"
                }
              }
            ],
            "tags": null,
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4"
            },
            "update_default_version": null,
            "user_data": "TUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSIvLyIKCi0tLy8KQ29udGVudC1UeXBlOiB0ZXh0L2Nsb3VkLWNvbmZpZzsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9ImNsb3VkLWNvbmZpZy50eHQiCgojY2xvdWQtY29uZmlnCmNsb3VkX2ZpbmFsX21vZHVsZXM6Ci0gW3NjcmlwdHMtdXNlciwgYWx3YXlzXQoKLS0vLwpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCiMhL2Jpbi9iYXNoIC14ZQoKZXhlYyA+ID4odGVlIC92YXIvbG9nL3VzZXItZGF0YS5sb2d8bG9nZ2VyIC10IHVzZXItZGF0YSAtcyAyPi9kZXYvY29uc29sZSkgMj4mMQoKW1sgLWYgL2V0Yy8uZmlyc3Rib290X2RvbmUgXV0gfHwgewoKIyMgSW5zdGFsbCByZXF1aXJlbWVudHMKcnBtIC1xYSB8IGdyZXAgcGFydGVkIHx8IHl1bSBpbnN0YWxsIC15IHBhcnRlZApycG0gLXFhIHwgZ3JlcCByc3luYyB8fCB5dW0gaW5zdGFsbCAteSByc3luYwoKIyMgSW5zdGFsbCBBbWF6b24gU1NNIEFnZW50CnJwbSAtcWEgfCBncmVwIGFtYXpvbi1zc20tYWdlbnQgfHwgeXVtIGluc3RhbGwgLXkgaHR0cHM6Ly9zMy5hcC1zb3V0aGVhc3QtMi5hbWF6b25hd3MuY29tL2FtYXpvbi1zc20tYXAtc291dGhlYXN0LTIvbGF0ZXN0L2xpbnV4X2FtZDY0L2FtYXpvbi1zc20tYWdlbnQucnBtCnN5c3RlbWN0bCBlbmFibGUgYW1hem9uLXNzbS1hZ2VudApjYXQgPDwgRU9GID4+IC9ldGMvYW1hem9uL3NzbS9zZWVsb2cueG1sCjwhLS1hbWF6b24tc3NtLWFnZW50IHVzZXMgc2VlbG9nIGxvZ2dpbmcgLS0+CjwhLS1TZWVsb2cgaGFzIGdpdGh1YiB3aWtpIHBhZ2VzLCB3aGljaCBjb250YWluIGRldGFpbGVkIGhvdy10b3MgcmVmZXJlbmNlczogaHR0cHM6Ly9naXRodWIuY29tL2NpaHViL3NlZWxvZy93aWtpIC0tPgo8IS0tU2VlbG9nIGV4YW1wbGVzIGNhbiBiZSBmb3VuZCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vY2lodWIvc2VlbG9nLWV4YW1wbGVzIC0tPgo8c2VlbG9nIHR5cGU9ImFkYXB0aXZlIiBtaW5pbnRlcnZhbD0iMjAwMDAwMCIgbWF4aW50ZXJ2YWw9IjEwMDAwMDAwMCIgY3JpdG1zZ2NvdW50PSI1MDAiIG1pbmxldmVsPSJpbmZvIj4KICAgIDxleGNlcHRpb25zPgogICAgICAgIDxleGNlcHRpb24gZmlsZXBhdHRlcm49InRlc3QqIiBtaW5sZXZlbD0iZXJyb3IiLz4KICAgIDwvZXhjZXB0aW9ucz4KICAgIDxvdXRwdXRzIGZvcm1hdGlkPSJmbXRpbmZvIj4KICAgICAgICA8Y29uc29sZSBmb3JtYXRpZD0iZm10aW5mbyIvPgogICAgICAgIDxyb2xsaW5nZmlsZSB0eXBlPSJzaXplIiBmaWxlbmFtZT0iL3Zhci9sb2cvYW1hem9uL3NzbS9hbWF6b24tc3NtLWFnZW50LmxvZyIgbWF4c2l6ZT0iMzAwMDAwMDAiIG1heHJvbGxzPSI1Ii8+CiAgICAgICAgPGZpbHRlciBsZXZlbHM9ImVycm9yLGNyaXRpY2FsIiBmb3JtYXRpZD0iZm10ZXJyb3IiPgogICAgICAgICAgICA8cm9sbGluZ2ZpbGUgdHlwZT0ic2l6ZSIgZmlsZW5hbWU9Ii92YXIvbG9nL2FtYXpvbi9zc20vZXJyb3JzLmxvZyIgbWF4c2l6ZT0iMTAwMDAwMDAiIG1heHJvbGxzPSI1Ii8+CiAgICAgICAgPC9maWx0ZXI+CiAgICAgICAgPGN1c3RvbSBuYW1lPSJjbG91ZHdhdGNoX3JlY2VpdmVyIiBmb3JtYXRpZD0iZm10ZGVidWciIGRhdGEtbG9nLWdyb3VwPSIvYXdzL2Vrcy9ub2tpYS1sYWI0L2NsdXN0ZXIiLz4KICAgIDwvb3V0cHV0cz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQgaWQ9ImZtdGVycm9yIiBmb3JtYXQ9IiVEYXRlICVUaW1lICVMRVZFTCBbJUZ1bmNTaG9ydCBAICVGaWxlLiVMaW5lXSAlTXNnJW4iLz4KICAgICAgICA8Zm9ybWF0IGlkPSJmbXRkZWJ1ZyIgZm9ybWF0PSIlRGF0ZSAlVGltZSAlTEVWRUwgWyVGdW5jU2hvcnQgQCAlRmlsZS4lTGluZV0gJU1zZyVuIi8+CiAgICAgICAgPGZvcm1hdCBpZD0iZm10aW5mbyIgZm9ybWF0PSIlRGF0ZSAlVGltZSAlTEVWRUwgJU1zZyVuIi8+CiAgICA8L2Zvcm1hdHM+Cjwvc2VlbG9nPgpFT0YKc3lzdGVtY3RsIHJlc3RhcnQgYW1hem9uLXNzbS1hZ2VudAoKIyMgUGFydGl0aW9uaW5nCnBhcnRlZCAtLXNjcmlwdCAvZGV2L252bWUxbjEgXApta2xhYmVsIGdwdCBcCm1rcGFydCBsb2cgZXh0NCAwJSAxMDAlCnBhcnRwcm9iZQoKIyMgRm9ybWF0IG5ldyBwYXJ0aXRpb24KbWtmcy5leHQ0IC9kZXYvbnZtZTFuMXAxCgojIyBBdXRvbWF0aWMgbW91bnQKY2F0IDw8IEVPRiA+PiAvZXRjL2ZzdGFiCnRtcGZzICAgL3RtcCAgICAgICAgICAgIHRtcGZzICAgICBkZWZhdWx0cyxzaXplPTFnLG1vZGU9MTc3Nyxub2Rldixub2V4ZWMsbm9zdWlkICAwICAgICAgIDAKL3RtcCAgICAvdmFyL3RtcCAgICAgICAgbm9uZSAgICAgIHJ3LG5vZGV2LG5vZXhlYyxub3N1aWQsYmluZCAgICAgMCAgICAgICAwCnRtcGZzICAgL2Rldi9zaG0gICAgICAgIHRtcGZzICAgICBub2V4ZWMsbm9zdWlkLG5vZGV2ICAgIDAgICAgICAgMApFT0YKCiMgL3Zhci9sb2cKZWNobyAiJChibGtpZCB8IGdyZXAgbnZtZTFuMXAxIHwgYXdrICd7cHJpbnQgJDJ9JykgL3Zhci9sb2cgZXh0NCBkZWZhdWx0cyxub2ZhaWwgMCAyIiA+PiAvZXRjL2ZzdGFiCm1rZGlyIC1wIC90bXAvbG9nCm1vdW50IC9kZXYvbnZtZTFuMXAxIC90bXAvbG9nCnJzeW5jIC1hdiAvdmFyL2xvZy8gL3RtcC9sb2cKdW1vdW50IC90bXAvbG9nCm1vdW50IC9kZXYvbnZtZTFuMXAxIC92YXIvbG9nCmNobW9kIC1SIDc3NyAvdmFyL2xvZwoKIyBSZWxvYWQgZnN0YWIKbW91bnQgLWEKCmt1YmVsZXRfc2VydmljZT0iL2V0Yy9zeXN0ZW1kL3N5c3RlbS9rdWJlbGV0LnNlcnZpY2UiCgoKIyBEb2NrZXIgb3B0aW9ucyBzZXQgc3lzY29uZmlnIGVudmlyb25tZW50IGZpbGUKY2F0IDw8IEVPRiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKCk9QVElPTlM9Jy0tc2VsaW51eC1lbmFibGVkPXRydWUgLS1leGVjLW9wdD1uYXRpdmUuY2dyb3VwZHJpdmVyPXN5c3RlbWQgLS1zdG9yYWdlLW9wdCBvdmVybGF5Mi5vdmVycmlkZV9rZXJuZWxfY2hlY2s9dHJ1ZSAtLXVzZXJsYW5kLXByb3h5PWZhbHNlJwpFT0YKc3lzdGVtY3RsIHJlc3RhcnQgZG9ja2VyCgoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHByZSB1c2VyZGF0YSBjb2RlCgoKIyBTeXN0ZW1kIGRvZXMgbm90IHN1cHBvcnQgYXBwZW5kaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcy4gQWRkIGEgbmV3IHZhcmlhYmxlCnNlZCAtaSAncy9LVUJFTEVUX0VYVFJBX0FSR1MvS1VCRUxFVF9FWFRSQV9BUkdTICRFWFRFTkRFRF9LVUJFTEVUX0FSR1MvJyAka3ViZWxldF9zZXJ2aWNlCmNhdCA8PCBFT0YgPiAvZXRjL3N5c3RlbWQvc3lzdGVtL2t1YmVsZXQuc2VydmljZS5kLzk5OTktZXh0ZW5kZWQta3ViZWxldC1hcmdzLmNvbmYKW1NlcnZpY2VdCkVudmlyb25tZW50PSdFWFRFTkRFRF9LVUJFTEVUX0FSR1M9LS1jZ3JvdXAtZHJpdmVyPXN5c3RlbWQnCkVPRgpzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZAoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKCgoKIyBQb2ludCByZXNvbHYuY29uZiB0byBOb2RlTG9jYWwgRE5TCmVjaG8gInN1cGVyc2VkZSBkb21haW4tbmFtZS1zZXJ2ZXJzIDEyNy4wLjAuMSwxNjkuMjU0LjE2OS4yNTM7IiA+PiAvZXRjL2RoY3AvZGhjbGllbnQuY29uZiAmJiBkaGNsaWVudCAtciAmJiBkaGNsaWVudAojIFdlIGFsd2F5cyB1c2UgaW1hZ2UtaWQgaW4gbGF1bmNoLXRlbXBsYXRlIHdoaWNoIG1lYW5zIGl0IGlzIGNvbnNpZGVyZWQgYXMgY3VzdG9tIEFNSQpCNjRfQ0xVU1RFUl9DQT1MUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplVTFVU1hoTmVrRXhUa1JSTVU0eGIxaEVWRTE1VFZSSmVFMUVRVEZPUkZFeFRqRnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVUZGdUNsQkJUVFYwVmpSRFozSk5abGQ0WTNodFVtRnNlbFI0UTNSRU1GRnlaek4yTVcxbVREQnlWM2hpTURoRmIyeEpLMDFsUlVOaWMxbHlSSGM0TVhFeFJWRUtNbUZKVTB0RlRscEdOVEJqWjNaNmRtNXliR1J4WlRKVWIzQlhlVTl5TkRBdlQwaEhURnBQYWtSd1pWRXpTM1pTWVdRMVdETm9jbXMzWVhFeGFWVXhid3B6YVZOSk4yeFNiR2RXVTA1emIwcEZia0ZWTUhScE0xQmxlWGRpVFZKelNXYzBSMUpMY0hWSlpWZE1PRlZCUTB0R2RXMVdkRmRPV1ZaU1MxUnZlRW93Q2xGd1JWcFBVRmRwVTFoemRERXdlVm94YUhWVmJFTTRUbTVrU1RGWlRVd3hkMU53YkVNMlpGUnpRbFEzYWt4dVJIaDZjMGRqVDBaUldrOXFVa0ZQWjJNS1NWZHhTVk53TWpVNE9ESk1aRGh4ZVZWbk1IbzFhVUp0VW1waksxUTJTbEJ3U1dwNlVuQTNOR2ROYldSeFNXVjFWak51VDFaQmFIUklZU3RNVjJGMGFRcGFOa2cwVmt0YWEyc3dWalZqUTBKTVoxRk5RMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkpkaTlOV25Jd1pEaFllRU5MV0VkUVkxZGpPQzkzYUUxa01raE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUkM4emRteFdTWE56VmpjM0szRm5TSE52UVFwNlJIWkZjRzkzYnpkdk5EVjBXSHBXWXpaS1ZpOVhVbWRzVlZaNmVGUjJibU5WVjNsM1duWlBla05CWkRSblpTdHlNeTgzY1VGYWNXVnhVemd5U2xSR0NtUkxiMWhTZDJKMFRsZHBabm8zZEdSNWNtTnZZMEpzTVdsdlpDODNSMUJIZW13eGFVcE5VQzg1V1RKTldqWkdZV2xyY3pKSVoxZE1LelpMYVRoUk0wb0tSV0pOUldoUmVXdE9RbXBNYjFGd1VWcE1TRGRXWkVGNGJDczVjMHR4VG1GSGF6UlBXVVV4UW1sMWIzSlJTbTUzUm5KMldtRkJNbmRpZGsxS05WRk1ZZ3BxV0VwMk5YUjFWVEJIWm5OamVFOWpkRUV3TDFWWGNVNUpWVWRMZFdwTVRGTnFXazVuWVhnMVJXNHZURGd4TTI5UFUwd3JVaXRFVjFjeU9GaGhWMEZGQ2toclF6RllWVWRQYlVjelFXSmpibkJhVkN0Nk1HaHNaelZ0T1hSVlptTkVUMGN6ZWprNU9WTnJlREZNVUhWNFJtZHFUak5DYlZWcUsycElXazluVVV3S01FbHpQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CkFQSV9TRVJWRVJfVVJMPWh0dHBzOi8vMDlFQzUyQzg1NzEwQTBGRDM2OTkxOEMyMDg4OTcxOUEuZ3I3LmFwLXNvdXRoZWFzdC0yLmVrcy5hbWF6b25hd3MuY29tCi9ldGMvZWtzL2Jvb3RzdHJhcC5zaCBub2tpYS1sYWI0IC0tYjY0LWNsdXN0ZXItY2EgJEI2NF9DTFVTVEVSX0NBIC0tYXBpc2VydmVyLWVuZHBvaW50ICRBUElfU0VSVkVSX1VSTCAtLWNvbnRhaW5lci1ydW50aW1lIGRvY2tlcmQKCnRvdWNoIC9ldGMvLmZpcnN0Ym9vdF9kb25lCn0KCgoK",
            "vpc_security_group_ids": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eks_cluster.this",
            "aws_key_pair.cluster_key",
            "aws_kms_alias.cluster",
            "aws_security_group.cluster",
            "data.aws_ami.eks_worker",
            "data.aws_iam_role.eks",
            "data.aws_subnet_ids.private",
            "data.aws_subnet_ids.vpc",
            "data.template_file.aws_ssm_seelog",
            "data.template_file.edges_userdata"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:launch-template/lt-08c025d290abae3e6",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "true",
                    "iops": 0,
                    "kms_key_id": "arn:aws:kms:ap-southeast-2:126494010021:alias/cluster-nokia-lab4",
                    "snapshot_id": "",
                    "throughput": 0,
                    "volume_size": 50,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/sdf",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "true",
                    "iops": 0,
                    "kms_key_id": "arn:aws:kms:ap-southeast-2:126494010021:alias/cluster-nokia-lab4",
                    "snapshot_id": "",
                    "throughput": 0,
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "default_version": 1,
            "description": "",
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "enclave_options": [],
            "hibernation_options": [],
            "iam_instance_profile": [],
            "id": "lt-08c025d290abae3e6",
            "image_id": "ami-06eb8d7d0eb5ee68e",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_type": "a1.4xlarge",
            "kernel_id": "",
            "key_name": "nokia-lab4-key",
            "latest_version": 1,
            "license_specification": [],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "nokia-lab4-workers_launch_template20221213055105543200000001",
            "name_prefix": "nokia-lab4-workers_launch_template",
            "network_interfaces": [
              {
                "associate_carrier_ip_address": "",
                "associate_public_ip_address": "false",
                "delete_on_termination": "true",
                "description": "",
                "device_index": 0,
                "interface_type": "",
                "ipv4_address_count": 0,
                "ipv4_addresses": null,
                "ipv6_address_count": 0,
                "ipv6_addresses": null,
                "network_card_index": 0,
                "network_interface_id": "",
                "private_ip_address": "",
                "security_groups": [
                  "sg-0b1ec5e7e157fb7a6"
                ],
                "subnet_id": ""
              }
            ],
            "placement": [
              {
                "affinity": "",
                "availability_zone": "",
                "group_name": "",
                "host_id": "",
                "host_resource_group_arn": "",
                "partition_number": 0,
                "spread_domain": "",
                "tenancy": "default"
              }
            ],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "volume",
                "tags": {
                  "ClusterRegion": "nokia-lab4-ap-southeast-2",
                  "Component": "EKS cluster",
                  "DeployerTool": "CsfpOps",
                  "KubernetesCluster": "nokia-lab4",
                  "Name": "nokia-lab4_eks-workers-node"
                }
              },
              {
                "resource_type": "instance",
                "tags": {
                  "ClusterRegion": "nokia-lab4-ap-southeast-2",
                  "Component": "EKS cluster",
                  "DeployerTool": "CsfpOps",
                  "KubernetesCluster": "nokia-lab4",
                  "Name": "nokia-lab4_eks-workers-node",
                  "k8s.io/cluster-autoscaler/enabled": "false",
                  "k8s.io/cluster-autoscaler/nokia-lab4": "owned",
                  "role": "['workers']"
                }
              }
            ],
            "tags": null,
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4"
            },
            "update_default_version": null,
            "user_data": "TUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSIvLyIKCi0tLy8KQ29udGVudC1UeXBlOiB0ZXh0L2Nsb3VkLWNvbmZpZzsgY2hhcnNldD0idXMtYXNjaWkiCk1JTUUtVmVyc2lvbjogMS4wCkNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDdiaXQKQ29udGVudC1EaXNwb3NpdGlvbjogYXR0YWNobWVudDsgZmlsZW5hbWU9ImNsb3VkLWNvbmZpZy50eHQiCgojY2xvdWQtY29uZmlnCmNsb3VkX2ZpbmFsX21vZHVsZXM6Ci0gW3NjcmlwdHMtdXNlciwgYWx3YXlzXQoKLS0vLwpDb250ZW50LVR5cGU6IHRleHQveC1zaGVsbHNjcmlwdDsgY2hhcnNldD0idXMtYXNjaWkiCiMhL2Jpbi9iYXNoIC14ZQoKZXhlYyA+ID4odGVlIC92YXIvbG9nL3VzZXItZGF0YS5sb2d8bG9nZ2VyIC10IHVzZXItZGF0YSAtcyAyPi9kZXYvY29uc29sZSkgMj4mMQoKW1sgLWYgL2V0Yy8uZmlyc3Rib290X2RvbmUgXV0gfHwgewoKIyMgSW5zdGFsbCByZXF1aXJlbWVudHMKcnBtIC1xYSB8IGdyZXAgcGFydGVkIHx8IHl1bSBpbnN0YWxsIC15IHBhcnRlZApycG0gLXFhIHwgZ3JlcCByc3luYyB8fCB5dW0gaW5zdGFsbCAteSByc3luYwoKIyMgSW5zdGFsbCBBbWF6b24gU1NNIEFnZW50CnJwbSAtcWEgfCBncmVwIGFtYXpvbi1zc20tYWdlbnQgfHwgeXVtIGluc3RhbGwgLXkgaHR0cHM6Ly9zMy5hcC1zb3V0aGVhc3QtMi5hbWF6b25hd3MuY29tL2FtYXpvbi1zc20tYXAtc291dGhlYXN0LTIvbGF0ZXN0L2xpbnV4X2FtZDY0L2FtYXpvbi1zc20tYWdlbnQucnBtCnN5c3RlbWN0bCBlbmFibGUgYW1hem9uLXNzbS1hZ2VudApjYXQgPDwgRU9GID4+IC9ldGMvYW1hem9uL3NzbS9zZWVsb2cueG1sCjwhLS1hbWF6b24tc3NtLWFnZW50IHVzZXMgc2VlbG9nIGxvZ2dpbmcgLS0+CjwhLS1TZWVsb2cgaGFzIGdpdGh1YiB3aWtpIHBhZ2VzLCB3aGljaCBjb250YWluIGRldGFpbGVkIGhvdy10b3MgcmVmZXJlbmNlczogaHR0cHM6Ly9naXRodWIuY29tL2NpaHViL3NlZWxvZy93aWtpIC0tPgo8IS0tU2VlbG9nIGV4YW1wbGVzIGNhbiBiZSBmb3VuZCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vY2lodWIvc2VlbG9nLWV4YW1wbGVzIC0tPgo8c2VlbG9nIHR5cGU9ImFkYXB0aXZlIiBtaW5pbnRlcnZhbD0iMjAwMDAwMCIgbWF4aW50ZXJ2YWw9IjEwMDAwMDAwMCIgY3JpdG1zZ2NvdW50PSI1MDAiIG1pbmxldmVsPSJpbmZvIj4KICAgIDxleGNlcHRpb25zPgogICAgICAgIDxleGNlcHRpb24gZmlsZXBhdHRlcm49InRlc3QqIiBtaW5sZXZlbD0iZXJyb3IiLz4KICAgIDwvZXhjZXB0aW9ucz4KICAgIDxvdXRwdXRzIGZvcm1hdGlkPSJmbXRpbmZvIj4KICAgICAgICA8Y29uc29sZSBmb3JtYXRpZD0iZm10aW5mbyIvPgogICAgICAgIDxyb2xsaW5nZmlsZSB0eXBlPSJzaXplIiBmaWxlbmFtZT0iL3Zhci9sb2cvYW1hem9uL3NzbS9hbWF6b24tc3NtLWFnZW50LmxvZyIgbWF4c2l6ZT0iMzAwMDAwMDAiIG1heHJvbGxzPSI1Ii8+CiAgICAgICAgPGZpbHRlciBsZXZlbHM9ImVycm9yLGNyaXRpY2FsIiBmb3JtYXRpZD0iZm10ZXJyb3IiPgogICAgICAgICAgICA8cm9sbGluZ2ZpbGUgdHlwZT0ic2l6ZSIgZmlsZW5hbWU9Ii92YXIvbG9nL2FtYXpvbi9zc20vZXJyb3JzLmxvZyIgbWF4c2l6ZT0iMTAwMDAwMDAiIG1heHJvbGxzPSI1Ii8+CiAgICAgICAgPC9maWx0ZXI+CiAgICAgICAgPGN1c3RvbSBuYW1lPSJjbG91ZHdhdGNoX3JlY2VpdmVyIiBmb3JtYXRpZD0iZm10ZGVidWciIGRhdGEtbG9nLWdyb3VwPSIvYXdzL2Vrcy9ub2tpYS1sYWI0L2NsdXN0ZXIiLz4KICAgIDwvb3V0cHV0cz4KICAgIDxmb3JtYXRzPgogICAgICAgIDxmb3JtYXQgaWQ9ImZtdGVycm9yIiBmb3JtYXQ9IiVEYXRlICVUaW1lICVMRVZFTCBbJUZ1bmNTaG9ydCBAICVGaWxlLiVMaW5lXSAlTXNnJW4iLz4KICAgICAgICA8Zm9ybWF0IGlkPSJmbXRkZWJ1ZyIgZm9ybWF0PSIlRGF0ZSAlVGltZSAlTEVWRUwgWyVGdW5jU2hvcnQgQCAlRmlsZS4lTGluZV0gJU1zZyVuIi8+CiAgICAgICAgPGZvcm1hdCBpZD0iZm10aW5mbyIgZm9ybWF0PSIlRGF0ZSAlVGltZSAlTEVWRUwgJU1zZyVuIi8+CiAgICA8L2Zvcm1hdHM+Cjwvc2VlbG9nPgpFT0YKc3lzdGVtY3RsIHJlc3RhcnQgYW1hem9uLXNzbS1hZ2VudAoKIyMgUGFydGl0aW9uaW5nCnBhcnRlZCAtLXNjcmlwdCAvZGV2L252bWUxbjEgXApta2xhYmVsIGdwdCBcCm1rcGFydCBsb2cgZXh0NCAwJSAxMDAlCnBhcnRwcm9iZQoKIyMgRm9ybWF0IG5ldyBwYXJ0aXRpb24KbWtmcy5leHQ0IC9kZXYvbnZtZTFuMXAxCgojIyBBdXRvbWF0aWMgbW91bnQKY2F0IDw8IEVPRiA+PiAvZXRjL2ZzdGFiCnRtcGZzICAgL3RtcCAgICAgICAgICAgIHRtcGZzICAgICBkZWZhdWx0cyxzaXplPTFnLG1vZGU9MTc3Nyxub2Rldixub2V4ZWMsbm9zdWlkICAwICAgICAgIDAKL3RtcCAgICAvdmFyL3RtcCAgICAgICAgbm9uZSAgICAgIHJ3LG5vZGV2LG5vZXhlYyxub3N1aWQsYmluZCAgICAgMCAgICAgICAwCnRtcGZzICAgL2Rldi9zaG0gICAgICAgIHRtcGZzICAgICBub2V4ZWMsbm9zdWlkLG5vZGV2ICAgIDAgICAgICAgMApFT0YKCiMgL3Zhci9sb2cKZWNobyAiJChibGtpZCB8IGdyZXAgbnZtZTFuMXAxIHwgYXdrICd7cHJpbnQgJDJ9JykgL3Zhci9sb2cgZXh0NCBkZWZhdWx0cyxub2ZhaWwgMCAyIiA+PiAvZXRjL2ZzdGFiCm1rZGlyIC1wIC90bXAvbG9nCm1vdW50IC9kZXYvbnZtZTFuMXAxIC90bXAvbG9nCnJzeW5jIC1hdiAvdmFyL2xvZy8gL3RtcC9sb2cKdW1vdW50IC90bXAvbG9nCm1vdW50IC9kZXYvbnZtZTFuMXAxIC92YXIvbG9nCmNobW9kIC1SIDc3NyAvdmFyL2xvZwoKIyBSZWxvYWQgZnN0YWIKbW91bnQgLWEKCmt1YmVsZXRfc2VydmljZT0iL2V0Yy9zeXN0ZW1kL3N5c3RlbS9rdWJlbGV0LnNlcnZpY2UiCgoKIyBEb2NrZXIgb3B0aW9ucyBzZXQgc3lzY29uZmlnIGVudmlyb25tZW50IGZpbGUKY2F0IDw8IEVPRiA+PiAvZXRjL3N5c2NvbmZpZy9kb2NrZXIKCk9QVElPTlM9Jy0tc2VsaW51eC1lbmFibGVkPXRydWUgLS1leGVjLW9wdD1uYXRpdmUuY2dyb3VwZHJpdmVyPXN5c3RlbWQgLS1zdG9yYWdlLW9wdCBvdmVybGF5Mi5vdmVycmlkZV9rZXJuZWxfY2hlY2s9dHJ1ZSAtLXVzZXJsYW5kLXByb3h5PWZhbHNlJwpFT0YKc3lzdGVtY3RsIHJlc3RhcnQgZG9ja2VyCgoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHByZSB1c2VyZGF0YSBjb2RlCgoKIyBTeXN0ZW1kIGRvZXMgbm90IHN1cHBvcnQgYXBwZW5kaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcy4gQWRkIGEgbmV3IHZhcmlhYmxlCnNlZCAtaSAncy9LVUJFTEVUX0VYVFJBX0FSR1MvS1VCRUxFVF9FWFRSQV9BUkdTICRFWFRFTkRFRF9LVUJFTEVUX0FSR1MvJyAka3ViZWxldF9zZXJ2aWNlCmNhdCA8PCBFT0YgPiAvZXRjL3N5c3RlbWQvc3lzdGVtL2t1YmVsZXQuc2VydmljZS5kLzk5OTktZXh0ZW5kZWQta3ViZWxldC1hcmdzLmNvbmYKW1NlcnZpY2VdCkVudmlyb25tZW50PSdFWFRFTkRFRF9LVUJFTEVUX0FSR1M9LS1jZ3JvdXAtZHJpdmVyPXN5c3RlbWQnCkVPRgpzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZAoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKCgoKIyBQb2ludCByZXNvbHYuY29uZiB0byBOb2RlTG9jYWwgRE5TCmVjaG8gInN1cGVyc2VkZSBkb21haW4tbmFtZS1zZXJ2ZXJzIDEyNy4wLjAuMSwxNjkuMjU0LjE2OS4yNTM7IiA+PiAvZXRjL2RoY3AvZGhjbGllbnQuY29uZiAmJiBkaGNsaWVudCAtciAmJiBkaGNsaWVudAojIFdlIGFsd2F5cyB1c2UgaW1hZ2UtaWQgaW4gbGF1bmNoLXRlbXBsYXRlIHdoaWNoIG1lYW5zIGl0IGlzIGNvbnNpZGVyZWQgYXMgY3VzdG9tIEFNSQpCNjRfQ0xVU1RFUl9DQT1MUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplVTFVU1hoTmVrRXhUa1JSTVU0eGIxaEVWRTE1VFZSSmVFMUVRVEZPUkZFeFRqRnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVUZGdUNsQkJUVFYwVmpSRFozSk5abGQ0WTNodFVtRnNlbFI0UTNSRU1GRnlaek4yTVcxbVREQnlWM2hpTURoRmIyeEpLMDFsUlVOaWMxbHlSSGM0TVhFeFJWRUtNbUZKVTB0RlRscEdOVEJqWjNaNmRtNXliR1J4WlRKVWIzQlhlVTl5TkRBdlQwaEhURnBQYWtSd1pWRXpTM1pTWVdRMVdETm9jbXMzWVhFeGFWVXhid3B6YVZOSk4yeFNiR2RXVTA1emIwcEZia0ZWTUhScE0xQmxlWGRpVFZKelNXYzBSMUpMY0hWSlpWZE1PRlZCUTB0R2RXMVdkRmRPV1ZaU1MxUnZlRW93Q2xGd1JWcFBVRmRwVTFoemRERXdlVm94YUhWVmJFTTRUbTVrU1RGWlRVd3hkMU53YkVNMlpGUnpRbFEzYWt4dVJIaDZjMGRqVDBaUldrOXFVa0ZQWjJNS1NWZHhTVk53TWpVNE9ESk1aRGh4ZVZWbk1IbzFhVUp0VW1waksxUTJTbEJ3U1dwNlVuQTNOR2ROYldSeFNXVjFWak51VDFaQmFIUklZU3RNVjJGMGFRcGFOa2cwVmt0YWEyc3dWalZqUTBKTVoxRk5RMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkpkaTlOV25Jd1pEaFllRU5MV0VkUVkxZGpPQzkzYUUxa01raE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUkM4emRteFdTWE56VmpjM0szRm5TSE52UVFwNlJIWkZjRzkzYnpkdk5EVjBXSHBXWXpaS1ZpOVhVbWRzVlZaNmVGUjJibU5WVjNsM1duWlBla05CWkRSblpTdHlNeTgzY1VGYWNXVnhVemd5U2xSR0NtUkxiMWhTZDJKMFRsZHBabm8zZEdSNWNtTnZZMEpzTVdsdlpDODNSMUJIZW13eGFVcE5VQzg1V1RKTldqWkdZV2xyY3pKSVoxZE1LelpMYVRoUk0wb0tSV0pOUldoUmVXdE9RbXBNYjFGd1VWcE1TRGRXWkVGNGJDczVjMHR4VG1GSGF6UlBXVVV4UW1sMWIzSlJTbTUzUm5KMldtRkJNbmRpZGsxS05WRk1ZZ3BxV0VwMk5YUjFWVEJIWm5OamVFOWpkRUV3TDFWWGNVNUpWVWRMZFdwTVRGTnFXazVuWVhnMVJXNHZURGd4TTI5UFUwd3JVaXRFVjFjeU9GaGhWMEZGQ2toclF6RllWVWRQYlVjelFXSmpibkJhVkN0Nk1HaHNaelZ0T1hSVlptTkVUMGN6ZWprNU9WTnJlREZNVUhWNFJtZHFUak5DYlZWcUsycElXazluVVV3S01FbHpQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CkFQSV9TRVJWRVJfVVJMPWh0dHBzOi8vMDlFQzUyQzg1NzEwQTBGRDM2OTkxOEMyMDg4OTcxOUEuZ3I3LmFwLXNvdXRoZWFzdC0yLmVrcy5hbWF6b25hd3MuY29tCi9ldGMvZWtzL2Jvb3RzdHJhcC5zaCBub2tpYS1sYWI0IC0tYjY0LWNsdXN0ZXItY2EgJEI2NF9DTFVTVEVSX0NBIC0tYXBpc2VydmVyLWVuZHBvaW50ICRBUElfU0VSVkVSX1VSTCAtLWNvbnRhaW5lci1ydW50aW1lIGRvY2tlcmQKCnRvdWNoIC9ldGMvLmZpcnN0Ym9vdF9kb25lCn0KCgoK",
            "vpc_security_group_ids": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eks_cluster.this",
            "aws_key_pair.cluster_key",
            "aws_kms_alias.cluster",
            "aws_security_group.cluster",
            "data.aws_ami.eks_worker",
            "data.aws_iam_role.eks",
            "data.aws_subnet_ids.private",
            "data.aws_subnet_ids.vpc",
            "data.template_file.aws_ssm_seelog",
            "data.template_file.workers_userdata"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0a527e62f43e4c3ce",
            "connectivity_type": "public",
            "id": "nat-0a82c9c68e35ab5e6",
            "network_interface_id": "eni-09e66248571f6fc61",
            "private_ip": "10.15.0.74",
            "public_ip": "3.24.86.204",
            "subnet_id": "subnet-0c675e86319101909",
            "tags": {
              "Name": "nokia-lab4-ap-southeast-2a"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-ap-southeast-2a"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0cfaa091d376666c9",
            "connectivity_type": "public",
            "id": "nat-0e198e52227ff6f74",
            "network_interface_id": "eni-09c0e81b16a21da56",
            "private_ip": "10.15.2.100",
            "public_ip": "52.64.27.24",
            "subnet_id": "subnet-09db2fb0739f04d56",
            "tags": {
              "Name": "nokia-lab4-ap-southeast-2b"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-ap-southeast-2b"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0f679a49a8d642e1e",
            "connectivity_type": "public",
            "id": "nat-06221fc6f38f6dc0a",
            "network_interface_id": "eni-050287dbcc60cb61e",
            "private_ip": "10.15.4.201",
            "public_ip": "54.253.181.221",
            "subnet_id": "subnet-09aa4790765cedef7",
            "tags": {
              "Name": "nokia-lab4-ap-southeast-2c"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-ap-southeast-2c"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:network-acl/acl-0b3e9927e09ce447c",
            "egress": [],
            "id": "acl-0b3e9927e09ce447c",
            "ingress": [],
            "owner_id": "126494010021",
            "subnet_ids": [
              "subnet-058d18852b903ca2b",
              "subnet-087f49635a3f662c7",
              "subnet-08fbb1f98b5b27244",
              "subnet-09aa4790765cedef7",
              "subnet-09db2fb0739f04d56",
              "subnet-0c675e86319101909"
            ],
            "tags": {
              "Name": "nokia-lab4-public"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-public"
            },
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "public_inbound",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "cidr_block": "0.0.0.0/0",
            "egress": false,
            "from_port": 0,
            "icmp_code": null,
            "icmp_type": null,
            "id": "nacl-2240866514",
            "ipv6_cidr_block": "",
            "network_acl_id": "acl-0b3e9927e09ce447c",
            "protocol": "all",
            "rule_action": "allow",
            "rule_number": 100,
            "to_port": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_network_acl.public",
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "public_outbound",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "cidr_block": "0.0.0.0/0",
            "egress": true,
            "from_port": 0,
            "icmp_code": null,
            "icmp_type": null,
            "id": "nacl-490408101",
            "ipv6_cidr_block": "",
            "network_acl_id": "acl-0b3e9927e09ce447c",
            "protocol": "all",
            "rule_action": "allow",
            "rule_number": 100,
            "to_port": 0
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_network_acl.public",
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0a93929a6267377cb1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0a82c9c68e35ab5e6",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0a93929a6267377cb",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_nat_gateway.this",
            "aws_route_table.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-00a25dc7d3d17bcb61080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-0e198e52227ff6f74",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-00a25dc7d3d17bcb6",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_nat_gateway.this",
            "aws_route_table.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0ba58976dc6bd8d381080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-06221fc6f38f6dc0a",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0ba58976dc6bd8d38",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_nat_gateway.this",
            "aws_route_table.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-0ea66ca34cd5214a0",
            "id": "r-rtb-0b2348ad6f715c37c1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0b2348ad6f715c37c",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.this",
            "aws_route_table.public",
            "aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:route-table/rtb-0a93929a6267377cb",
            "id": "rtb-0a93929a6267377cb",
            "owner_id": "126494010021",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "nokia-lab4-private-ap-southeast-2a-natgw"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-private-ap-southeast-2a-natgw"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:route-table/rtb-00a25dc7d3d17bcb6",
            "id": "rtb-00a25dc7d3d17bcb6",
            "owner_id": "126494010021",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "nokia-lab4-private-ap-southeast-2b-natgw"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-private-ap-southeast-2b-natgw"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:route-table/rtb-0ba58976dc6bd8d38",
            "id": "rtb-0ba58976dc6bd8d38",
            "owner_id": "126494010021",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "nokia-lab4-private-ap-southeast-2c-natgw"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-private-ap-southeast-2c-natgw"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:route-table/rtb-0b2348ad6f715c37c",
            "id": "rtb-0b2348ad6f715c37c",
            "owner_id": "126494010021",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "nokia-lab4-public-rt"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-public-rt"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-065d5ec5204ee412f",
            "route_table_id": "rtb-0a93929a6267377cb",
            "subnet_id": "subnet-08fbb1f98b5b27244"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.private",
            "aws_subnet.private",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0db6e552033ea5698",
            "route_table_id": "rtb-00a25dc7d3d17bcb6",
            "subnet_id": "subnet-058d18852b903ca2b"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.private",
            "aws_subnet.private",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-05e136e8b4d811b5a",
            "route_table_id": "rtb-0ba58976dc6bd8d38",
            "subnet_id": "subnet-087f49635a3f662c7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.private",
            "aws_subnet.private",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-05d5c7afd3c7fe0e9",
            "route_table_id": "rtb-0b2348ad6f715c37c",
            "subnet_id": "subnet-0c675e86319101909"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.public",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-034bf07a45f2905d7",
            "route_table_id": "rtb-0b2348ad6f715c37c",
            "subnet_id": "subnet-09db2fb0739f04d56"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.public",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0133a4c8e268af600",
            "route_table_id": "rtb-0b2348ad6f715c37c",
            "subnet_id": "subnet-09aa4790765cedef7"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_route_table.public",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:security-group/sg-0b1ec5e7e157fb7a6",
            "description": "Main Cluster security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow cluster egress access to the Internet.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0b1ec5e7e157fb7a6",
            "ingress": [
              {
                "cidr_blocks": [
                  "3.24.165.59/32",
                  "131.228.104.64/27"
                ],
                "description": "Allow internal communication with EKS backplane and CLUSTER_SECURITY_GROUP_RULES.IPSETS defined in vars.yaml.",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              },
              {
                "cidr_blocks": [
                  "3.24.86.204/32"
                ],
                "description": "allow NAT Gateway EIP (3.24.86.204/32) on all ports",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 65535
              },
              {
                "cidr_blocks": [
                  "52.64.27.24/32"
                ],
                "description": "allow NAT Gateway EIP (52.64.27.24/32) on all ports",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 65535
              },
              {
                "cidr_blocks": [
                  "54.253.181.221/32"
                ],
                "description": "allow NAT Gateway EIP (54.253.181.221/32) on all ports",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 65535
              }
            ],
            "name": "nokia-lab4-cluster-sg-20221213054000711600000002",
            "name_prefix": "nokia-lab4-cluster-sg-",
            "owner_id": "126494010021",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "nokia-lab4-cluster-sg"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-cluster-sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_eip.nat",
            "aws_internet_gateway.this",
            "aws_nat_gateway.this",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:subnet/subnet-08fbb1f98b5b27244",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-2a",
            "availability_zone_id": "apse2-az1",
            "cidr_block": "10.15.1.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-08fbb1f98b5b27244",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-subnet-private-ap-southeast-2a",
              "Network": "private",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-subnet-private-ap-southeast-2a",
              "Network": "private",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:subnet/subnet-058d18852b903ca2b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-2b",
            "availability_zone_id": "apse2-az3",
            "cidr_block": "10.15.3.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-058d18852b903ca2b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-subnet-private-ap-southeast-2b",
              "Network": "private",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-subnet-private-ap-southeast-2b",
              "Network": "private",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:subnet/subnet-087f49635a3f662c7",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-2c",
            "availability_zone_id": "apse2-az2",
            "cidr_block": "10.15.5.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-087f49635a3f662c7",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-subnet-private-ap-southeast-2c",
              "Network": "private",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-subnet-private-ap-southeast-2c",
              "Network": "private",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:subnet/subnet-0c675e86319101909",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-2a",
            "availability_zone_id": "apse2-az1",
            "cidr_block": "10.15.0.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0c675e86319101909",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-subnet-public-ap-southeast-2a",
              "Network": "public",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-subnet-public-ap-southeast-2a",
              "Network": "public",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:subnet/subnet-09db2fb0739f04d56",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-2b",
            "availability_zone_id": "apse2-az3",
            "cidr_block": "10.15.2.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-09db2fb0739f04d56",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-subnet-public-ap-southeast-2b",
              "Network": "public",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-subnet-public-ap-southeast-2b",
              "Network": "public",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:subnet/subnet-09aa4790765cedef7",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "ap-southeast-2c",
            "availability_zone_id": "apse2-az2",
            "cidr_block": "10.15.4.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-09aa4790765cedef7",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-subnet-public-ap-southeast-2c",
              "Network": "public",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-subnet-public-ap-southeast-2c",
              "Network": "public",
              "kubernetes.io/cluster/nokia-lab4": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:vpc/vpc-02827d6d88aa6323e",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.15.0.0/16",
            "default_network_acl_id": "acl-03033d793d7e00e0e",
            "default_route_table_id": "rtb-0cbfa876bd8ae7c45",
            "default_security_group_id": "sg-093d8791d71cfadfd",
            "dhcp_options_id": "dopt-031020e46fb020284",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-02827d6d88aa6323e",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-0cbfa876bd8ae7c45",
            "owner_id": "126494010021",
            "tags": {
              "Name": "nokia-lab4-vpc"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "gateway_endpoints",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:ap-southeast-2:126494010021:vpc-endpoint/vpce-0d158e22d3e0067da",
            "auto_accept": null,
            "cidr_blocks": [
              "3.5.164.0/22",
              "3.5.168.0/23",
              "52.95.128.0/21"
            ],
            "dns_entry": [],
            "id": "vpce-0d158e22d3e0067da",
            "network_interface_ids": [],
            "owner_id": "126494010021",
            "policy": "{\"Statement\":[{\"Action\":\"*\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"*\"}],\"Version\":\"2008-10-17\"}",
            "prefix_list_id": "pl-6ca54005",
            "private_dns_enabled": false,
            "requester_managed": false,
            "route_table_ids": [
              "rtb-00a25dc7d3d17bcb6",
              "rtb-0a93929a6267377cb",
              "rtb-0ba58976dc6bd8d38"
            ],
            "security_group_ids": [],
            "service_name": "com.amazonaws.ap-southeast-2.s3",
            "state": "available",
            "subnet_ids": [],
            "tags": {
              "Name": "nokia-lab4-vpce-s3"
            },
            "tags_all": {
              "ClusterRegion": "nokia-lab4-ap-southeast-2",
              "Component": "EKS cluster",
              "DeployerTool": "CsfpOps",
              "KubernetesCluster": "nokia-lab4",
              "Name": "nokia-lab4-vpce-s3"
            },
            "timeouts": null,
            "vpc_endpoint_type": "Gateway",
            "vpc_id": "vpc-02827d6d88aa6323e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_route_table.private",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait_10_seconds",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "10s",
            "destroy_duration": null,
            "id": "2022-12-13T05:38:06Z",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.private",
            "aws_subnet.public",
            "aws_vpc.this",
            "data.aws_availability_zones.azs"
          ],
          "create_before_destroy": true
        }
      ]
    }
  ]
}
